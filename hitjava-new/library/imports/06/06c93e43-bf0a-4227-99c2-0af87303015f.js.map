{"version":3,"sources":["assets\\Loading\\src\\Loading.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nimport Http from \"../../Loading/src/Http\";\nimport BundleControl from \"./BundleControl\";\nimport Configs from \"./Configs\";\nimport { Global } from \"./Global\";\nimport UtilsNative from \"./UtilsNative\";\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Loading extends cc.Component {\n\n\n    @property(cc.Label)\n    lblStatus: cc.Label = null;\n    @property(cc.Label)\n    lbTips: cc.Label = null;\n    @property(cc.Slider)\n    nodeSlider: cc.Slider = null;\n\n    // @property(cc.Slider)\n    // slider :cc.Slider = null;\n\n    @property(cc.Sprite)\n    spriteProgress: cc.Sprite = null;\n    listSkeData = []\n    listTips = [\n        {\n            vi: \"Đừng quên đăng nhập hàng ngày để nhận thưởng Điểm Danh bạn nhé!\",\n            en: \"Dont forget login every day to get free attendance bonus!\"\n        },\n        {\n            vi: \"Tiến Lên Miền Nam: Chống gian lận,an toàn tuyệt đối\",\n            en: \"Killer 13: Anti cheating,absolute safety\"\n        },\n        {\n            vi: \"Nạp đầu nhận thưởng lên tới 790K\",\n            en: \"First cash-in can receive bonus up to 790K\"\n        },\n        {\n            vi: \"Bộ phận chăm sóc khách hàng luôn online 24/24 bạn nhé!\",\n            en: \"Customer care team support online 24/24!\"\n        },\n        {\n            vi: \"Vianne nạp rút nhanh chóng và an toàn!\",\n            en: \"Vianne quick cashin,cashout and alway safety!\"\n        },\n    ]\n    start() {\n        cc.assetManager.downloader.maxConcurrency = 20;\n\t\tcc.assetManager.downloader.maxRequestsPerFrame = 6;\n        this.showTips();\n    }\n    startGame() {\n        this.lblStatus.string = \"Loading...\";\n        this.spriteProgress.fillRange = 0;\n        this.nodeSlider.progress = 0;\n\n        if (Configs.App.IS_LOCAL == false) {\n            Http.get(\"https://res.FANVIN.wIN/assets/AssetBundleVersion.json\", {}, (err, data) => {\n                BundleControl.init(data);\n              this.loadLobby();  \n            });\n\t\t\t\n        }\n        else {\n            this.loadLobby();\n        }\n        UtilsNative.getDeviceId();\n    }\n    loadScriptCore() {\n        BundleControl.loadBundle(\"ScriptCore\", (bundle) => {\n            this.loadLobby();\n        });\n    }\n\n    loadLobby() {\n        var self = this;\n        let time = new Date().getTime();\n        BundleControl.loadBundle(\"Lobby\", (bundle) => {\n            Global.BundleLobby = bundle;\n            let size = this.listSkeData.length;\n            for (let i = 0; i < size; i++) {\n                let path = this.listSkeData[i];\n                bundle.load(path, sp.SkeletonData, (err, asset) => {\n                    if (err) {\n                        //  cc.log(\"err load ske:\", err);\n                        return;\n                    }\n                    // cc.log(\"load Success Ske Data:\" + path);\n                });\n            }\n            bundle.loadScene('Lobby', function (finish, total, item) {\n                self.lblStatus.string = \"Loading: \" + parseInt((finish / total) * 100) + \"%\";\n                self.spriteProgress.fillRange = (finish / total);\n                self.nodeSlider.progress = self.spriteProgress.fillRange;\n            }, (err1, scene) => {\n                if (err1 != null) {\n                    //  cc.log(\"Error Load Scene Lobby:\", JSON.stringify(err1));\n                }\n                cc.sys.localStorage.setItem(\"SceneLobby\", scene);\n                cc.director.runScene(scene);\n                let time2 = new Date().getTime();\n                //  cc.log(\"Time Delta=\" + ((time2 - time) / 1000));\n            });\n            bundle.loadDir(\"PrefabPopup\", cc.Prefab, (err, arrPrefab) => {\n                if (err) {\n                    //  cc.log(\"Error Bundle LoadDir PrefabPopup!\");\n                    return;\n                }\n            });\n        })\n\n    }\n    showTips() {\n        this.schedule(() => {\n            this.lbTips.string = this.getStrTips();\n        }, 3.0, cc.macro.REPEAT_FOREVER, 0.1)\n    }\n    getStrTips() {\n        let langCode = cc.sys.localStorage.getItem(\"langCode\");\n        if (langCode == null) {\n            langCode = \"vi\"\n        }\n        let strTip = this.listTips[this.randomRangeInt(0, this.listTips.length)];\n        return strTip[langCode];\n    }\n    randomRangeInt(min: number, max: number): number {\n        //Returns a random number between min (inclusive) and max (inclusive)\n        //Math.floor(Math.random() * (max - min + 1)) + min;\n\n        //Returns a random number between min (inclusive) and max (exclusive)\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    // update (dt) {}\n}\n"]}