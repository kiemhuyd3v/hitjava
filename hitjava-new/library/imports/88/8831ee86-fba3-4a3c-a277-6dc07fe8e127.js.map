{"version":3,"sources":["assets\\Lobby\\LobbyScript\\Script\\common\\BroadcastReceiver.ts"],"names":[],"mappings":";;;;;;AAAA,IAAU,MAAM,CAyDf;AAzDD,WAAU,MAAM;IACZ;QAKI,2BAAY,MAAc,EAAE,QAA6B,EAAE,MAAoB;YAC3E,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC7B,CAAC;QACL,wBAAC;IAAD,CAVA,AAUC,IAAA;IAVY,wBAAiB,oBAU7B,CAAA;IAED;QAAA;QA2CA,CAAC;QAhCiB,0BAAQ,GAAtB,UAAuB,MAAc,EAAE,QAA6B,EAAE,MAAoB;YACtF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;QACzE,CAAC;QAEa,oCAAkB,GAAhC,UAAiC,MAAc;YAC3C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC1C,IAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,MAAM,EAAC;oBAClC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;iBACjC;aACJ;QACL,CAAC;QAEa,oCAAkB,GAAhC,UAAiC,MAAoB;YACjD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC1C,IAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,MAAM,EAAC;oBAClC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;iBACjC;aACJ;QACL,CAAC;QAEa,sBAAI,GAAlB,UAAmB,MAAc,EAAE,IAAgB;YAAhB,qBAAA,EAAA,WAAgB;YAC/C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC1C,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACjC,IAAG,QAAQ,CAAC,MAAM,IAAI,MAAM,EAAC;oBACzB,IAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,YAAY,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE;wBAC9E,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;qBAC3B;yBAAM;wBACH,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;qBACjC;iBACJ;aACJ;QACL,CAAC;QAzCa,yCAAuB,GAAG,yBAAyB,CAAC;QACpD,yBAAO,GAAG,SAAS,CAAC;QACpB,mCAAiB,GAAG,mBAAmB,CAAC;QACxC,6BAAW,GAAG,aAAa,CAAC;QAC5B,kCAAgB,GAAG,kBAAkB,CAAC;QACtC,kCAAgB,GAAG,kBAAkB,CAAC;QACtC,gCAAc,GAAG,gBAAgB,CAAC;QAEjC,2BAAS,GAA6B,IAAI,KAAK,EAAqB,CAAC;QAkCxF,wBAAC;KA3CD,AA2CC,IAAA;IA3CY,wBAAiB,oBA2C7B,CAAA;AACL,CAAC,EAzDS,MAAM,KAAN,MAAM,QAyDf;AAED,kBAAe,MAAM,CAAC,iBAAiB,CAAC","file":"","sourceRoot":"/","sourcesContent":["namespace common {\n    export class BroadcastListener {\n        action: string;\n        target: cc.Component;\n        callback: (data: any) => void;\n\n        constructor(action: string, callback: (data: any) => void, target: cc.Component) {\n            this.action = action;\n            this.target = target;\n            this.callback = callback;\n        }\n    }\n\n    export class BroadcastReceiver {\n        public static UPDATE_NICKNAME_SUCCESS = \"UPDATE_NICKNAME_SUCCESS\";\n        public static LOGINED = \"LOGINED\";\n        public static USER_INFO_UPDATED = \"USER_INFO_UPDATED\";\n        public static USER_LOGOUT = \"USER_LOGOUT\";\n        public static USER_UPDATE_COIN = \"USER_UPDATE_COIN\";\n        public static ON_AUDIO_CHANGED = \"ON_AUDIO_CHANGED\";\n        public static ON_UPDATE_MAIL = \"ON_UPDATE_MAIL\";\n\n        private static listeners: Array<BroadcastListener> = new Array<BroadcastListener>();\n\n        public static register(action: string, callback: (data: any) => void, target: cc.Component) {\n            this.listeners.push(new BroadcastListener(action, callback, target));\n        }\n\n        public static unRegisterByAction(action: string){\n            for(var i = 0; i < this.listeners.length; i++){\n                if(this.listeners[i].action == action){\n                    this.listeners.splice(i--, 1);\n                }\n            }\n        }\n\n        public static unRegisterByTarget(target: cc.Component){\n            for(var i = 0; i < this.listeners.length; i++){\n                if(this.listeners[i].target == target){\n                    this.listeners.splice(i--, 1);\n                }\n            }\n        }\n\n        public static send(action: string, data: any = null){\n            for(var i = 0; i < this.listeners.length; i++){\n                let listener = this.listeners[i];\n                if(listener.action == action){\n                    if (listener.target && listener.target instanceof Object && listener.target.node) {\n                        listener.callback(data);\n                    } else {\n                        this.listeners.splice(i--, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport default common.BroadcastReceiver;"]}