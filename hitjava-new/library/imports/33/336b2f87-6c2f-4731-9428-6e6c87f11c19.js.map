{"version":3,"sources":["assets\\Loading\\src\\UtilsNative.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Global } from \"./Global\";\n\nvar SEND_LOG_EVENT = \"1\";\nvar GET_DEVICE_ID = \"2\";\nvar VERIFY_PHONE = \"3\";\nvar VERIFY_OTP = \"4\";\nvar COPY_CLIPBOARD = \"5\";\n\ncc.NativeCallJS = function (evt: string, params: string, param2: string) {\n    // if (evt !== UPDATE_INFO_TIME)\n    switch (evt + '') {\n        case SEND_LOG_EVENT: {\n            //  cc.log(\"Send Log Event:\");\n            break;\n        }\n        case GET_DEVICE_ID: {\n            //  cc.log(\"Device id:\" + params);\n            break;\n        }\n        case VERIFY_PHONE: {\n            let token = params;\n            Global.PopupSecurity.actGetOtpServer(token);\n            break;\n        }\n        case VERIFY_OTP: {\n            let result = params;\n            Global.PopupSecurity.actGetVerifyCode(result);\n            break;\n        }\n        default: {\n            //  cc.log('-=-=-=-=-=->>>No CASE:' + evt);\n            break;\n        }\n    }\n}\n\nexport default class UtilsNative {\n    static onCallNative(evt: string, params: string) {\n        if (cc.sys.os === cc.sys.OS_ANDROID && cc.sys.isNative) {\n            //  cc.log('Call Native-=-=-= EVT ' + evt + \" PARAMS \" + params)\n            jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"onCallFromJavascript\", \"(Ljava/lang/String;Ljava/lang/String;)V\", evt, params);\n        } else if (cc.sys.os === cc.sys.OS_IOS && cc.sys.isNative) {\n            //  cc.log('Call Native-=-=-= EVT ' + evt)\n            jsb.reflection.callStaticMethod(\"AppController\", \"onCallFromJavaScript:andParams:\", evt, params);\n        }\n    }\n\n    static sendLogEvent(jsonData) {\n        //  cc.log(\"sendLogEvent:\", JSON.stringify(jsonData));\n        this.onCallNative(SEND_LOG_EVENT, JSON.stringify(jsonData));\n    }\n    static getDeviceId() {\n        // this.onCallNative(GET_DEVICE_ID,\"\");\n        if (!CC_JSB)\n            return;\n        let deviceID;\n        if (cc.sys.os == cc.sys.OS_ANDROID) {\n            deviceID = jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"getDeviceId\", \"()Ljava/lang/String;\");\n        } else if (cc.sys.os == cc.sys.OS_IOS) {\n            deviceID = jsb.reflection.callStaticMethod(\"AppController\", \"getDeviceId:andParams:\", \"\", \"\");\n        }\n        //  cc.log(\"Device ID=\" + deviceID);\n        return deviceID;\n    }\n    static verifyPhone(phoneNumber) {\n        this.onCallNative(VERIFY_PHONE, phoneNumber);\n    }\n    static verifyOTP(otp) {\n        this.onCallNative(VERIFY_OTP, otp);\n    }\n    static httpGet(url: string, onFinished: (err: any, json: any) => void) {\n        var xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200) {\n                    var data = null;\n                    var e = null;\n                    try {\n                        data = JSON.parse(xhr.responseText);\n                    } catch (ex) {\n                        e = ex;\n                    }\n                    onFinished(e, data);\n                } else {\n                    onFinished(xhr.status, null);\n                }\n            }\n        };\n        xhr.open(\"GET\", url, true);\n        xhr.send();\n    }\n    static copyClipboard(text) {\n        this.onCallNative(COPY_CLIPBOARD, text);\n    }\n\n}"]}