{"version":3,"sources":["assets\\Lobby\\LobbyScript\\Script\\networks\\TaiXiuSieuToc.NetworkClient.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Configs from \"../../../../Loading/src/Configs\";\nimport App from \"../common/App\";\nimport Utils from \"../common/Utils\";\nimport NetworkListener from \"./Network.NetworkListener\";\nimport SockJsClient from \"./Network.SockJsClient\";\nexport default class TaiXiuSTNetworkClient extends SockJsClient {\n    private static instance: TaiXiuSTNetworkClient;\n    token = \"\";\n    public static TaiXiuSieuTocController = null;\n    isOpenGame = false;\n    private listeners: Array<NetworkListener> = new Array<NetworkListener>();\n    public static getInstance(): TaiXiuSTNetworkClient {\n        if (this.instance == null) {\n            this.instance = new TaiXiuSTNetworkClient();\n        }\n        return this.instance;\n    }\n    connect() {\n        super.connect(Configs.App.HOST_SOCKJS + Configs.App.SOCKJS_LOGIN + \"?access_token=\" + Configs.Login.AccessTokenSockJs, Configs.App.TXST_SUB_TOPIC);\n    }\n    public addListener(callback: (data: Uint8Array) => void, target: cc.Component) {\n        this.listeners.push(new NetworkListener(target, callback));\n    }\n    protected onMessage(data) {\n        for (var i = 0; i < this.listeners.length; i++) {\n            var listener = this.listeners[i];\n            if (listener.target && listener.target instanceof Object && listener.target.node) {\n                listener.callback(data);\n            } else {\n                this.listeners.splice(i, 1);\n                i--;\n            }\n        }\n    }\n    onCustomMessage(msg, data = null) {\n        super.onCustomMessage(msg, data);\n        switch (msg) {\n            case \"SUBSCRIBE\":\n                 //Utils.Log(data);\n                this.listSubChannel.push(data); // add sub-id to list to check later in game;\n                if (data.destination == \"/user/queue/tx\") {\n                    TaiXiuSTNetworkClient.TaiXiuSieuTocController.gameSubscribeId = data.id;\n                }\n                break;\n            case \"UNSUBSCRIBE\"://event unsubscribe delete sub-id to check subscribed channel in game  before send data\n                 //Utils.Log(data);\n                for (let i = 0; i < this.listSubChannel.length; i++) {\n                    if (this.listSubChannel[i].id == data.id) {\n                        this.subscribe(this.listSubChannel[i].destination);\n                        this.listSubChannel.splice(i, 1);\n                        break;\n                    }\n                }\n                break;\n            case \"ONCLOSE\":\n                this.onClose(\"ONCLOSE\");\n                break;\n        }\n\n    }\n    onConnected() {\n        super.onConnected();\n        if (this.isOpenGame) {\n            App.instance.openMiniGameTaiXiuSieuToc(\"TaiXiuSieuToc\", \"TaiXiuSieuToc\");\n            this.isOpenGame = false;\n        }\n    }\n    sendBet(data) {\n         //Utils.Log(\"data Bet==\", data);\n        this.send(\"/topic/bet\", JSON.stringify(data));\n    }\n    sendChat(data) {\n        this.send(\"/topic/chats\", JSON.stringify(data));\n    }\n    getChatHistory() {\n        let data: any = {};\n        this.send(\"/topic/public\", JSON.stringify(data));\n    }\n    getHistorySession() {\n         //Utils.Log(\"getHistorySession\");\n        let data: any = {};\n        this.send(\"/topic/lichsuphien\", JSON.stringify(data));\n    }\n    checkConnect(cb) {\n        if (this.isConnected && this.isLogin) {\n            cb();\n        } else {\n            this.reconnect();\n        }\n    }\n\n    protected send(destination, data) {\n        var headers = {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"Bearer \" + this.token\n        };\n         //Utils.Log(\"Bearer \" + this.token);\n        this.stompClient.send(destination, headers, data);\n    }\n    protected onClose(event) {\n        super.onClose(event);\n        if (TaiXiuSTNetworkClient.TaiXiuSieuTocController != null) {\n            TaiXiuSTNetworkClient.TaiXiuSieuTocController.dismiss();\n        }\n    }\n    getHistory(page, size, onFinished) {\n        let url = Configs.App.HOST_SOCKJS + \"api/tx/lichsucuoc?page=%d&size=%d&sort=id%2Cdesc\";\n        url = cc.js.formatStr(url, page, size);\n        this.requestAPI(url, onFinished);\n    }\n    getHistorySessionId(sessionid, onFinished) {\n        let url = Configs.App.HOST_SOCKJS + \"api/tx/thongkephien/\" + sessionid;\n        this.requestAPI(url, onFinished);\n    }\n    getTopHonor() {\n        // let url = Configs.App.HOST_SOCKJS + \"api/tx-ranks\";\n        // this.requestAPI(url, onFinished, \"GET\");\n        let data: any = {};\n        this.send(\"/topic/ranktx\", JSON.stringify(data));\n    }\n    requestAPI(url: string, onFinished: (err: any, json: any) => void, method = \"POST\") {\n        var xhr = new XMLHttpRequest();\n         //Utils.Log(\"url==\" + url);\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200) {\n                    var data = null;\n                    var e = null;\n                    try {\n                        data = JSON.parse(xhr.responseText);\n                    } catch (ex) {\n                        e = ex;\n                    }\n                    onFinished(e, data);\n                } else {\n                    onFinished(xhr.status, null);\n                }\n            }\n        };\n         //Utils.Log(\"Method==\" + method);\n        xhr.open(method, url, true);\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhr.setRequestHeader(\"Authorization\", `Bearer ${this.token}`);\n        xhr.send();\n\n    }\n}\n"]}