{"version":3,"sources":["assets\\Lobby\\LobbyScript\\Script\\networks\\PacketHeaderAnalyze.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["namespace Network {\n    export class PacketHeaderAnalyze {\n        static BIT_IS_BINARY_INDEX = 7;\n        static BIT_IS_ENCRYPT_INDEX = 6;\n        static BIT_IS_COMPRESS_INDEX = 5;\n        static BIT_IS_BLUE_BOXED_INDEX = 4;\n        static BIT_IS_BIG_SIZE_INDEX = 3;\n        static BYTE_PACKET_SIZE_INDEX = 1;\n        static BIG_HEADER_SIZE = 5;\n        static NORMAL_HEADER_SIZE = 3;\n\n        static getDataSize(a) {\n            return this.isBigSize(a) ? this.getIntAt(a, this.BYTE_PACKET_SIZE_INDEX) : this.getUnsignedShortAt(a, this.BYTE_PACKET_SIZE_INDEX);\n        }\n        static getCmdIdFromData(a) {\n            return this.getShortAt(a, 1);\n        }\n        static isBigSize(a) {\n            return this.getBit(a[0], this.BIT_IS_BIG_SIZE_INDEX);\n        }\n        static isCompress(a) {\n            return this.getBit(a[0], this.BIT_IS_COMPRESS_INDEX);\n        }\n        static getValidSize(a) {\n            var b = 0,\n                c = 0;\n            if (this.isBigSize(a)) {\n                if (length < this.BIG_HEADER_SIZE) return -1;\n                b = this.getIntAt(a,\n                    this.BYTE_PACKET_SIZE_INDEX);\n                c = this.BIG_HEADER_SIZE\n            } else {\n                if (length < this.NORMAL_HEADER_SIZE) return -1;\n                b = this.getUnsignedShortAt(a, this.BYTE_PACKET_SIZE_INDEX);\n                c = this.NORMAL_HEADER_SIZE;\n            }\n            return b + c\n        }\n        static getBit(a, b) {\n            return 0 != (a & 1 << b)\n        }\n        static genHeader(a, b) {\n            var c;\n            c = this.setBit(0, 7, !0);\n            c = this.setBit(c, 6, !1);\n            c = this.setBit(c, 5, b);\n            c = this.setBit(c, 4, !0);\n            return c = this.setBit(c, 3, a);\n        }\n        static setBit(a, b, c) {\n            return c ? a | 1 << b : a & ~(1 << b);\n        }\n        static getIntAt(a, b) {\n            return ((a[b] & 255) << 24) + ((a[b + 1] & 255) << 16) + ((a[b + 2] & 255) << 8) + ((a[b + 3] & 255) << 0);\n        }\n        static getUnsignedShortAt(a, b) {\n            return ((a[b] & 255) << 8) + ((a[b + 1] & 255) << 0);\n        }\n        static getShortAt(a, b) {\n            return (a[b] << 8) + (a[b + 1] & 255);\n        }\n    }\n}\nexport default Network.PacketHeaderAnalyze;"]}