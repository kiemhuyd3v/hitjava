{"version":3,"sources":["assets\\Lobby\\LobbyScript\\Script\\networks\\Network.SockJsClient.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\n\nimport Configs from '../../../../Loading/src/Configs';\nimport * as SockJS from '../../../../Loading/src/Sockjs.min';\n// import * as SockJS from '../../../../Loading/src/sockjs114';\nimport * as Stomp from '../../../../Loading/src/stomp2'\n\n\nimport NetworkListener from './Network.NetworkListener';\nimport App from '../common/App';\nimport Utils from '../common/Utils';\n\n\nexport default class SockJsClient {\n\n    ws: WebSocket = null;\n    stompClient: Stomp = null;\n    host: string = \"\";\n    apiSub = \"\";\n    port: number = 0;\n    isForceClose = false;\n    isConnected = false;\n    isLogin = false;\n    isUseWSS: boolean = false;\n    isAutoReconnect: boolean = true;\n    retryCount = 0;\n    retrySubCount = 0;\n    token = \"\";\n    _onOpenes: Array<NetworkListener> = [];\n    _onCloses: Array<NetworkListener> = [];\n    listSubChannel = [];\n\n    connect(host: string, apiSub) {\n        this.token = Configs.Login.AccessTokenSockJs;\n        this.isForceClose = false;\n        this.host = host;\n        this.apiSub = apiSub;\n        if (this.ws == null) {\n            if (cc.sys.isBrowser) {\n                 //Utils.Log(\"Start Connect Game SockJs:\" + host);\n                this.ws = new SockJS(host);\n            } else {\n                host = host.replace(\"https\", \"http\");\n                 //Utils.Log(\"Start Connect Game SockJs:\" + host);\n                this.ws = new SockJS(host);\n\n            }\n            this.stompClient = Stomp.Stomp.over(this.ws);\n            var headers = {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + Configs.Login.AccessTokenSockJs\n            };\n            var _this = this;\n            this.stompClient.connect(headers, () => {\n                 //Utils.Log(\"STOMP CONNECTED & SUBSCRIBE\");\n                _this.isConnected = true;\n                this.onConnected();\n                this.subscribe(apiSub);\n            });\n            this.ws.onCustomMessage = this.onCustomMessage.bind(this);\n        } else {\n            if (this.ws.readyState !== WebSocket.OPEN) {\n                this.ws.close();\n                this.ws = null;\n\n                this.isConnected = false;\n                this.connect(host, apiSub);\n            }\n        }\n    }\n    onConnected() {\n         //Utils.Log(\"onConnected Stomp!\");\n    }\n    reconnect() {\n        this.connect(this.host, this.apiSub);\n    }\n    subscribe(destination) {\n        if (this.isConnected) {\n            this.stompClient.subscribe(destination, (data) => {\n                this.onMessage(data)\n            });\n        }\n    }\n    unSubscribe(idSub) {\n        if (this.isConnected) {\n            this.stompClient.unsubscribe(idSub);\n        }\n    }\n    addOnOpen(callback: () => void, target: cc.Component) {\n        this._onOpenes.push(new NetworkListener(target, callback));\n    }\n    addOnClose(callback: () => void, target: cc.Component) {\n        this._onCloses.push(new NetworkListener(target, callback));\n    }\n    onCustomMessage(msg, data = null) {\n         //Utils.Log(\"onCustomMessage:\" + msg);\n    }\n    checkSubChannel(id) {\n        let isSub = false;\n        for (let i = 0; i < this.listSubChannel.length; i++) {\n            if (this.listSubChannel[i].id == id) {\n                isSub = true;\n                break;\n            }\n        }\n        return isSub;\n    }\n    protected onOpen(ev: Event) {\n        this.isConnected = true;\n         //Utils.Log(\"onOpen SOCKJS\");\n        for (var i = 0; i < this._onOpenes.length; i++) {\n            var listener = this._onOpenes[i];\n            if (listener.target && listener.target instanceof Object && listener.target.node) {\n                listener.callback(null);\n            } else {\n                this._onOpenes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n    protected onMessage(ev: MessageEvent) {\n         //Utils.Log(\"onmessage: \" + ev.data);\n    }\n\n    protected onError(ev: Event) {\n         //Utils.Log(\"onError SOCKJS:\", JSON.stringify(ev));\n    }\n\n    protected onClose(ev) {\n        this.isConnected = false;\n        App.instance.showToast(App.instance.getTextLang('txt_check_connect'));\n        for (var i = 0; i < this._onCloses.length; i++) {\n            var listener = this._onCloses[i];\n            if (listener.target && listener.target instanceof Object && listener.target.node) {\n                listener.callback(null);\n            } else {\n                this._onCloses.splice(i, 1);\n                i--;\n            }\n        }\n         //Utils.Log(\"onClose SOCKJS\");\n\n    }\n}\n"]}