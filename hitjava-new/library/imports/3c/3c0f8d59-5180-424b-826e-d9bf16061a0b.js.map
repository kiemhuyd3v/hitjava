{"version":3,"sources":["assets\\Lobby\\LobbyScript\\Script\\common\\ScrollViewControl.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nconst { ccclass, property } = cc._decorator;\nvar DIRECTION = cc.Enum({\n    HORIZONTAL: 1,\n    VERTICAL: 2,\n});\n@ccclass\n\nexport default class ScrollViewControl extends cc.Component {\n    @property({ type: DIRECTION })\n    direction = DIRECTION.VERTICAL;\n    @property(cc.Prefab)\n    itemTemplate: cc.Prefab = null\n\n    @property(cc.Node)\n    itemNodeTemplate: cc.Node = null\n\n    @property(cc.ScrollView)\n    scrollView: cc.ScrollView = null\n    @property\n    itemHeight = 80;\n    @property\n    itemWidth = 80;\n    @property\n    spacing = 5 // space between each item\n\n    totalCount = 0 // how many items we need for the whole list\n    @property\n    initCount = 20;\n    @property\n    bufferZone = 500 // when item is away from bufferZone, we relocate it\n\n    @property\n    isLazyInit: boolean = false;\n\n    items = []\n    updateTimer = 0\n    updateInterval = 0.05\n    lastContentPosY = 0\n    lastContentPosX = 0\n    initHeight = 0;\n\n    listItemRemove = []\n    idKeys = []\n\n    updateCallback = null\n    setDataCb = null;\n    listItemData = []\n\n\n    // use this for initialization\n    onLoad() {\n        if (this.direction == DIRECTION.HORIZONTAL) {\n            // this.initCount = Math.floor((this.scrollView.node.width + this.scrollView.node.width / 2) * (cc.winSize.width / 1560) / this.itemWidth);\n            this.initCount = Math.floor(this.initCount * (cc.winSize.width / 1560));\n\n        }\n        this.initialize();\n        if (this.itemNodeTemplate) {\n            this.itemHeight = this.itemNodeTemplate.height;\n            this.itemWidth = this.itemNodeTemplate.width;\n        }\n    }\n    start() {\n       \n    }\n\n    setDataList(_updateCallback, _listItemData) {\n        this.setDataCb = () => {\n            this.setDataList(_updateCallback, _listItemData);\n        }\n        this.updateCallback = _updateCallback\n        this.listItemData = _listItemData\n        this.totalCount = this.listItemData.length;\n        if (this.direction == DIRECTION.VERTICAL) {\n            this.scrollView.content.height = this.totalCount * (this.itemHeight + this.spacing) + this.spacing; // get total content height\n        } else {\n            this.scrollView.content.width = this.totalCount * (this.itemWidth + this.spacing) + this.spacing; // get total content height\n        }\n\n        if (this.totalCount === 0 || this.totalCount <= this.items.length) {\n            for (let i = this.totalCount; i < this.items.length; i++) {\n                this.listItemRemove.push(this.items[i])\n                this.items[i].parent = null\n                this.items.splice(i, 1);\n                i--;\n            }\n        } else {\n            for (let i = 0; i < this.listItemRemove.length; i++) {\n\n                this.items.push(this.listItemRemove[i])\n                this.listItemRemove[i].parent = this.scrollView.content;\n                this.listItemRemove.splice(i, 1);\n                i--;\n            }\n        }\n        if (this.direction == DIRECTION.VERTICAL) {\n            for (let i = 0; i < this.items.length; i++) {\n                this.items[i].setPosition(0, -this.items[i].height * (0.5 + i) - this.spacing * (i + 1));\n                this.items[i].itemID = i;\n                if (this.updateCallback !== null && i < this.listItemData.length) {\n                    this.listItemData[i]['index'] = i;\n                    this.updateCallback(this.items[i], this.listItemData[i])\n                }\n            }\n        } else {\n            for (let i = 0; i < this.items.length; i++) {\n                this.items[i].setPosition(this.items[i].width * (0.5 + i) + this.spacing * (i + 1), 0);\n                this.items[i].itemID = i;\n                if (this.updateCallback !== null && this.listItemData[i] != null) {\n                    this.updateCallback(this.items[i], this.listItemData[i])\n                }\n            }\n        }\n\n    }\n    updateDataList(_listItemData) {\n        this.listItemData = _listItemData;\n        this.totalCount = this.listItemData.length;\n        if (this.direction == DIRECTION.VERTICAL) {\n            this.scrollView.content.height = this.totalCount * (this.itemHeight + this.spacing) + this.spacing; // get total content height\n        } else {\n            this.scrollView.content.width = this.totalCount * (this.itemWidth + this.spacing) + this.spacing; // get total content height\n        }\n    }\n    initialize() {\n        if (this.direction == DIRECTION.VERTICAL) {\n            this.scrollView.content.height = this.totalCount * (this.itemHeight + this.spacing) + this.spacing; // get total content height\n        } else {\n            this.scrollView.content.width = this.totalCount * (this.itemWidth + this.spacing) + this.spacing; // get total content height\n        }\n\n        for (let i = 0; i < this.initCount; ++i) { // spawn items, we only need to do this once\n            let item;\n            if (cc.isValid(this.itemTemplate)) {\n                item = cc.instantiate(this.itemTemplate);\n                this.scrollView.content.addChild(item);\n            } else {\n                if (i == 0) {\n                    item = this.itemNodeTemplate;\n                } else {\n                    if (cc.isValid(this.scrollView.content.children[i])) {\n                        item = this.scrollView.content.children[i];\n                    } else {\n                        item = cc.instantiate(this.itemNodeTemplate);\n                        this.scrollView.content.addChild(item);\n                    }\n                }\n            }\n            if (this.direction == DIRECTION.VERTICAL) {\n                item.setPosition(0, -item.height * (0.5 + i) - this.spacing * (i + 1));\n            } else {\n                item.setPosition(item.width * (0.5 + i) + this.spacing * (i + 1), 0);\n            }\n            item['itemID'] = i;\n            this.items.push(item);\n        }\n        if (this.listItemData.length > 0) {\n            this.setDataCb();\n        }\n    }\n\n    getPositionInView(item) { // get item position in scrollview's node space\n        let worldPos = item.parent.convertToWorldSpaceAR(item.getPosition());\n        let viewPos = this.scrollView.node.convertToNodeSpaceAR(worldPos);\n        return viewPos;\n    }\n    update(dt) {\n        if (this.listItemData.length <= this.initCount) return;\n\n        this.updateTimer += dt;\n        if (this.updateTimer < this.updateInterval) return; // we don't need to do the math every frame\n        this.updateTimer = 0;\n        let items = this.items;\n        let buffer = this.bufferZone;\n        let isDown = false;\n        let offset;\n        if (this.direction == DIRECTION.VERTICAL) {\n            isDown = this.scrollView.content.y < this.lastContentPosY; // scrolling direction\n            offset = (this.itemHeight + this.spacing) * items.length;\n\n        } else {\n            isDown = this.scrollView.content.x > this.lastContentPosX; // scrolling direction\n            offset = (this.itemWidth + this.spacing) * items.length;\n        }\n        for (let i = 0; i < items.length; ++i) {\n            let viewPos = this.getPositionInView(items[i]);\n            if (isDown) {\n                if (this.direction == DIRECTION.VERTICAL) {\n                    if (viewPos.y < -buffer && items[i].y + offset < 0) {\n                        items[i].y = items[i].y + offset;\n                        let itemId = items[i].itemID - items.length; // update item id\n                        items[i].itemID = itemId;\n                        if (this.updateCallback !== null) {\n                            this.updateCallback(items[i], this.listItemData[itemId])\n                        }\n                    }\n                } else {\n                    if (viewPos.x > buffer && items[i].x - offset > 0) {\n                        items[i].x = items[i].x - offset;\n                        let itemId = items[i].itemID - items.length; // update item id\n                        items[i].itemID = itemId;\n                        if (this.updateCallback !== null)\n                            this.updateCallback(items[i], this.listItemData[itemId])\n                    }\n                }\n                // if away from buffer zone and not reaching top of content\n\n            } else {\n                // if away from buffer zone and not reaching bottom of content\n                if (this.direction === DIRECTION.VERTICAL) {\n                    if (viewPos.y > buffer && items[i].y - offset > -this.scrollView.content.height) {\n                        items[i].y = items[i].y - offset;\n                        let itemId = items[i].itemID + items.length;\n                        items[i].itemID = itemId;\n                        if (this.updateCallback !== null) {\n                            this.updateCallback(items[i], this.listItemData[itemId])\n                        }\n\n                    }\n                } else {\n                    if (viewPos.x < -buffer && items[i].x + offset < this.scrollView.content.width) {\n                        items[i].x = items[i].x + offset;\n                        let itemId = items[i].itemID + items.length;\n                        items[i].itemID = itemId;\n                        if (this.updateCallback !== null)\n                            this.updateCallback(items[i], this.listItemData[itemId])\n                    }\n                }\n\n            }\n        }\n        // update lastContentPosY\n        this.lastContentPosY = this.scrollView.content.y;\n        this.lastContentPosX = this.scrollView.content.x;\n    }\n    setStateItem(state) {\n        this.scrollView.content.children.forEach((item) => {\n            item.active = state;\n        })\n    }\n}\n"]}