{"version":3,"sources":["assets\\Lobby\\LobbyScript\\Payment\\CQRCode.js"],"names":["QR8bitByte","data","mode","QRMode","MODE_8BIT_BYTE","prototype","getLength","buffer","length","write","i","put","charCodeAt","QRCode","typeNumber","errorCorrectLevel","modules","moduleCount","dataCache","dataList","Array","addData","newData","push","isDark","row","col","Error","getModuleCount","make","rsBlocks","QRRSBlock","getRSBlocks","QRBitBuffer","totalDataCount","dataCount","QRUtil","getLengthInBits","makeImpl","getBestMaskPattern","test","maskPattern","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","c","minLostPoint","pattern","lostPoint","getLostPoint","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","cs","y","x","dark","beginFill","moveTo","lineTo","endFill","pos","getPatternPosition","j","bits","getBCHTypeNumber","mod","Math","floor","getBCHTypeInfo","inc","bitIndex","byteIndex","mask","getMask","PAD0","PAD1","putBit","createBytes","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","rsPoly","getErrorCorrectPolynomial","rawPoly","QRPolynomial","modPoly","modIndex","get","totalCodeCount","index","MODE_NUMBER","MODE_ALPHA_NUM","MODE_KANJI","QRErrorCorrectLevel","L","M","Q","H","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","d","getBCHDigit","digit","errorCorrectLength","a","multiply","QRMath","gexp","type","qrCode","sameCount","count","darkCount","ratio","abs","glog","n","LOG_TABLE","EXP_TABLE","num","shift","undefined","e","RS_BLOCK_TABLE","rsBlock","getRsBlockTable","list","bufIndex","bit","CQRCode","cc","Class","Graphics","properties","string","notify","oldValue","setContent","backColor","Color","WHITE","foreColor","BLACK","old","node","color","margin","Float","_size","size","set","value","setContentSize","onLoad","setString","customData","sender","clear","fillColor","width","offsetX","anchorX","offsetY","anchorY","rect","fill","close","qrcode","tileW","tileH","w","ceil","h","round","game","once","EVENT_ENGINE_INITED","_assembler","Attr","setClassAttr","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["//---------------------------------------------------------------------\r\n// QRCode for JavaScript\r\n//\r\n// Copyright (c) 2009 Kazuhiko Arase\r\n//\r\n// URL: http://www.d-project.com/\r\n//\r\n// Licensed under the MIT license:\r\n//   http://www.opensource.org/licenses/mit-license.php\r\n//\r\n// The word \"QR Code\" is registered trademark of \r\n// DENSO WAVE INCORPORATED\r\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\r\n//\r\n//---------------------------------------------------------------------\r\n\r\n//---------------------------------------------------------------------\r\n// QR8bitByte\r\n//---------------------------------------------------------------------\r\n\r\nfunction QR8bitByte(data) {\r\n    this.mode = QRMode.MODE_8BIT_BYTE;\r\n    this.data = data;\r\n}\r\n\r\nQR8bitByte.prototype = {\r\n\r\n    getLength: function (buffer) {\r\n        return this.data.length;\r\n    },\r\n\r\n    write: function (buffer) {\r\n        for (let i = 0; i < this.data.length; i++) {\r\n            // not JIS ...\r\n            buffer.put(this.data.charCodeAt(i), 8);\r\n        }\r\n    }\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRCode\r\n//---------------------------------------------------------------------\r\n\r\nlet QRCode = function (typeNumber, errorCorrectLevel) {\r\n    this.typeNumber = typeNumber;\r\n    this.errorCorrectLevel = errorCorrectLevel;\r\n    this.modules = null;\r\n    this.moduleCount = 0;\r\n    this.dataCache = null;\r\n    this.dataList = new Array();\r\n}\r\n\r\nQRCode.prototype = {\r\n\r\n    addData: function (data) {\r\n        let newData = new QR8bitByte(data);\r\n        this.dataList.push(newData);\r\n        this.dataCache = null;\r\n    },\r\n\r\n    isDark: function (row, col) {\r\n        if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\r\n            throw new Error(row + \",\" + col);\r\n        }\r\n        return this.modules[row][col];\r\n    },\r\n\r\n    getModuleCount: function () {\r\n        return this.moduleCount;\r\n    },\r\n\r\n    make: function () {\r\n        // Calculate automatically typeNumber if provided is < 1\r\n        if (this.typeNumber < 1) {\r\n            let typeNumber = 1;\r\n            for (typeNumber = 1; typeNumber < 40; typeNumber++) {\r\n                let rsBlocks = QRRSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\r\n\r\n                let buffer = new QRBitBuffer();\r\n                let totalDataCount = 0;\r\n                for (let i = 0; i < rsBlocks.length; i++) {\r\n                    totalDataCount += rsBlocks[i].dataCount;\r\n                }\r\n\r\n                for (let i = 0; i < this.dataList.length; i++) {\r\n                    let data = this.dataList[i];\r\n                    buffer.put(data.mode, 4);\r\n                    buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\r\n                    data.write(buffer);\r\n                }\r\n                if (buffer.getLengthInBits() <= totalDataCount * 8)\r\n                    break;\r\n            }\r\n            this.typeNumber = typeNumber;\r\n        }\r\n        this.makeImpl(false, this.getBestMaskPattern());\r\n    },\r\n\r\n    makeImpl: function (test, maskPattern) {\r\n\r\n        this.moduleCount = this.typeNumber * 4 + 17;\r\n        this.modules = new Array(this.moduleCount);\r\n\r\n        for (let row = 0; row < this.moduleCount; row++) {\r\n\r\n            this.modules[row] = new Array(this.moduleCount);\r\n\r\n            for (let col = 0; col < this.moduleCount; col++) {\r\n                this.modules[row][col] = null;//(col + row) % 3;\r\n            }\r\n        }\r\n\r\n        this.setupPositionProbePattern(0, 0);\r\n        this.setupPositionProbePattern(this.moduleCount - 7, 0);\r\n        this.setupPositionProbePattern(0, this.moduleCount - 7);\r\n        this.setupPositionAdjustPattern();\r\n        this.setupTimingPattern();\r\n        this.setupTypeInfo(test, maskPattern);\r\n\r\n        if (this.typeNumber >= 7) {\r\n            this.setupTypeNumber(test);\r\n        }\r\n\r\n        if (this.dataCache == null) {\r\n            this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\r\n        }\r\n\r\n        this.mapData(this.dataCache, maskPattern);\r\n    },\r\n\r\n    setupPositionProbePattern: function (row, col) {\r\n\r\n        for (let r = -1; r <= 7; r++) {\r\n\r\n            if (row + r <= -1 || this.moduleCount <= row + r) continue;\r\n\r\n            for (let c = -1; c <= 7; c++) {\r\n\r\n                if (col + c <= -1 || this.moduleCount <= col + c) continue;\r\n\r\n                if ((0 <= r && r <= 6 && (c == 0 || c == 6))\r\n                    || (0 <= c && c <= 6 && (r == 0 || r == 6))\r\n                    || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {\r\n                    this.modules[row + r][col + c] = true;\r\n                } else {\r\n                    this.modules[row + r][col + c] = false;\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    getBestMaskPattern: function () {\r\n\r\n        let minLostPoint = 0;\r\n        let pattern = 0;\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n\r\n            this.makeImpl(true, i);\r\n\r\n            let lostPoint = QRUtil.getLostPoint(this);\r\n\r\n            if (i == 0 || minLostPoint > lostPoint) {\r\n                minLostPoint = lostPoint;\r\n                pattern = i;\r\n            }\r\n        }\r\n\r\n        return pattern;\r\n    },\r\n\r\n    createMovieClip: function (target_mc, instance_name, depth) {\r\n\r\n        let qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\r\n        let cs = 1;\r\n\r\n        this.make();\r\n\r\n        for (let row = 0; row < this.modules.length; row++) {\r\n\r\n            let y = row * cs;\r\n\r\n            for (let col = 0; col < this.modules[row].length; col++) {\r\n\r\n                let x = col * cs;\r\n                let dark = this.modules[row][col];\r\n\r\n                if (dark) {\r\n                    qr_mc.beginFill(0, 100);\r\n                    qr_mc.moveTo(x, y);\r\n                    qr_mc.lineTo(x + cs, y);\r\n                    qr_mc.lineTo(x + cs, y + cs);\r\n                    qr_mc.lineTo(x, y + cs);\r\n                    qr_mc.endFill();\r\n                }\r\n            }\r\n        }\r\n\r\n        return qr_mc;\r\n    },\r\n\r\n    setupTimingPattern: function () {\r\n\r\n        for (let r = 8; r < this.moduleCount - 8; r++) {\r\n            if (this.modules[r][6] != null) {\r\n                continue;\r\n            }\r\n            this.modules[r][6] = (r % 2 == 0);\r\n        }\r\n\r\n        for (let c = 8; c < this.moduleCount - 8; c++) {\r\n            if (this.modules[6][c] != null) {\r\n                continue;\r\n            }\r\n            this.modules[6][c] = (c % 2 == 0);\r\n        }\r\n    },\r\n\r\n    setupPositionAdjustPattern: function () {\r\n\r\n        let pos = QRUtil.getPatternPosition(this.typeNumber);\r\n\r\n        for (let i = 0; i < pos.length; i++) {\r\n\r\n            for (let j = 0; j < pos.length; j++) {\r\n\r\n                let row = pos[i];\r\n                let col = pos[j];\r\n\r\n                if (this.modules[row][col] != null) {\r\n                    continue;\r\n                }\r\n\r\n                for (let r = -2; r <= 2; r++) {\r\n\r\n                    for (let c = -2; c <= 2; c++) {\r\n\r\n                        if (r == -2 || r == 2 || c == -2 || c == 2\r\n                            || (r == 0 && c == 0)) {\r\n                            this.modules[row + r][col + c] = true;\r\n                        } else {\r\n                            this.modules[row + r][col + c] = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    setupTypeNumber: function (test) {\r\n\r\n        let bits = QRUtil.getBCHTypeNumber(this.typeNumber);\r\n\r\n        for (let i = 0; i < 18; i++) {\r\n            let mod = (!test && ((bits >> i) & 1) == 1);\r\n            this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\r\n        }\r\n\r\n        for (let i = 0; i < 18; i++) {\r\n            let mod = (!test && ((bits >> i) & 1) == 1);\r\n            this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\r\n        }\r\n    },\r\n\r\n    setupTypeInfo: function (test, maskPattern) {\r\n\r\n        let data = (this.errorCorrectLevel << 3) | maskPattern;\r\n        let bits = QRUtil.getBCHTypeInfo(data);\r\n\r\n        // vertical\t\t\r\n        for (let i = 0; i < 15; i++) {\r\n\r\n            let mod = (!test && ((bits >> i) & 1) == 1);\r\n\r\n            if (i < 6) {\r\n                this.modules[i][8] = mod;\r\n            } else if (i < 8) {\r\n                this.modules[i + 1][8] = mod;\r\n            } else {\r\n                this.modules[this.moduleCount - 15 + i][8] = mod;\r\n            }\r\n        }\r\n\r\n        // horizontal\r\n        for (let i = 0; i < 15; i++) {\r\n\r\n            let mod = (!test && ((bits >> i) & 1) == 1);\r\n\r\n            if (i < 8) {\r\n                this.modules[8][this.moduleCount - i - 1] = mod;\r\n            } else if (i < 9) {\r\n                this.modules[8][15 - i - 1 + 1] = mod;\r\n            } else {\r\n                this.modules[8][15 - i - 1] = mod;\r\n            }\r\n        }\r\n\r\n        // fixed module\r\n        this.modules[this.moduleCount - 8][8] = (!test);\r\n\r\n    },\r\n\r\n    mapData: function (data, maskPattern) {\r\n\r\n        let inc = -1;\r\n        let row = this.moduleCount - 1;\r\n        let bitIndex = 7;\r\n        let byteIndex = 0;\r\n\r\n        for (let col = this.moduleCount - 1; col > 0; col -= 2) {\r\n\r\n            if (col == 6) col--;\r\n\r\n            while (true) {\r\n\r\n                for (let c = 0; c < 2; c++) {\r\n\r\n                    if (this.modules[row][col - c] == null) {\r\n\r\n                        let dark = false;\r\n\r\n                        if (byteIndex < data.length) {\r\n                            dark = (((data[byteIndex] >>> bitIndex) & 1) == 1);\r\n                        }\r\n\r\n                        let mask = QRUtil.getMask(maskPattern, row, col - c);\r\n\r\n                        if (mask) {\r\n                            dark = !dark;\r\n                        }\r\n\r\n                        this.modules[row][col - c] = dark;\r\n                        bitIndex--;\r\n\r\n                        if (bitIndex == -1) {\r\n                            byteIndex++;\r\n                            bitIndex = 7;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                row += inc;\r\n\r\n                if (row < 0 || this.moduleCount <= row) {\r\n                    row -= inc;\r\n                    inc = -inc;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\nQRCode.PAD0 = 0xEC;\r\nQRCode.PAD1 = 0x11;\r\n\r\nQRCode.createData = function (typeNumber, errorCorrectLevel, dataList) {\r\n\r\n    let rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\r\n\r\n    let buffer = new QRBitBuffer();\r\n\r\n    for (let i = 0; i < dataList.length; i++) {\r\n        let data = dataList[i];\r\n        buffer.put(data.mode, 4);\r\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\r\n        data.write(buffer);\r\n    }\r\n\r\n    // calc num max data.\r\n    let totalDataCount = 0;\r\n    for (let i = 0; i < rsBlocks.length; i++) {\r\n        totalDataCount += rsBlocks[i].dataCount;\r\n    }\r\n\r\n    if (buffer.getLengthInBits() > totalDataCount * 8) {\r\n        throw new Error(\"code length overflow. (\"\r\n            + buffer.getLengthInBits()\r\n            + \">\"\r\n            + totalDataCount * 8\r\n            + \")\");\r\n    }\r\n\r\n    // end code\r\n    if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\r\n        buffer.put(0, 4);\r\n    }\r\n\r\n    // padding\r\n    while (buffer.getLengthInBits() % 8 != 0) {\r\n        buffer.putBit(false);\r\n    }\r\n\r\n    // padding\r\n    while (true) {\r\n\r\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n            break;\r\n        }\r\n        buffer.put(QRCode.PAD0, 8);\r\n\r\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n            break;\r\n        }\r\n        buffer.put(QRCode.PAD1, 8);\r\n    }\r\n\r\n    return QRCode.createBytes(buffer, rsBlocks);\r\n}\r\n\r\nQRCode.createBytes = function (buffer, rsBlocks) {\r\n\r\n    let offset = 0;\r\n\r\n    let maxDcCount = 0;\r\n    let maxEcCount = 0;\r\n\r\n    let dcdata = new Array(rsBlocks.length);\r\n    let ecdata = new Array(rsBlocks.length);\r\n\r\n    for (let r = 0; r < rsBlocks.length; r++) {\r\n\r\n        let dcCount = rsBlocks[r].dataCount;\r\n        let ecCount = rsBlocks[r].totalCount - dcCount;\r\n\r\n        maxDcCount = Math.max(maxDcCount, dcCount);\r\n        maxEcCount = Math.max(maxEcCount, ecCount);\r\n\r\n        dcdata[r] = new Array(dcCount);\r\n\r\n        for (let i = 0; i < dcdata[r].length; i++) {\r\n            dcdata[r][i] = 0xff & buffer.buffer[i + offset];\r\n        }\r\n        offset += dcCount;\r\n\r\n        let rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\r\n        let rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\r\n\r\n        let modPoly = rawPoly.mod(rsPoly);\r\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\r\n        for (let i = 0; i < ecdata[r].length; i++) {\r\n            let modIndex = i + modPoly.getLength() - ecdata[r].length;\r\n            ecdata[r][i] = (modIndex >= 0) ? modPoly.get(modIndex) : 0;\r\n        }\r\n\r\n    }\r\n\r\n    let totalCodeCount = 0;\r\n    for (let i = 0; i < rsBlocks.length; i++) {\r\n        totalCodeCount += rsBlocks[i].totalCount;\r\n    }\r\n\r\n    let data = new Array(totalCodeCount);\r\n    let index = 0;\r\n\r\n    for (let i = 0; i < maxDcCount; i++) {\r\n        for (let r = 0; r < rsBlocks.length; r++) {\r\n            if (i < dcdata[r].length) {\r\n                data[index++] = dcdata[r][i];\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < maxEcCount; i++) {\r\n        for (let r = 0; r < rsBlocks.length; r++) {\r\n            if (i < ecdata[r].length) {\r\n                data[index++] = ecdata[r][i];\r\n            }\r\n        }\r\n    }\r\n\r\n    return data;\r\n\r\n}\r\n\r\n//---------------------------------------------------------------------\r\n// QRMode\r\n//---------------------------------------------------------------------\r\n\r\nlet QRMode = {\r\n    MODE_NUMBER: 1 << 0,\r\n    MODE_ALPHA_NUM: 1 << 1,\r\n    MODE_8BIT_BYTE: 1 << 2,\r\n    MODE_KANJI: 1 << 3\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRErrorCorrectLevel\r\n//---------------------------------------------------------------------\r\n\r\nlet QRErrorCorrectLevel = {\r\n    L: 1,\r\n    M: 0,\r\n    Q: 3,\r\n    H: 2\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRMaskPattern\r\n//---------------------------------------------------------------------\r\n\r\nlet QRMaskPattern = {\r\n    PATTERN000: 0,\r\n    PATTERN001: 1,\r\n    PATTERN010: 2,\r\n    PATTERN011: 3,\r\n    PATTERN100: 4,\r\n    PATTERN101: 5,\r\n    PATTERN110: 6,\r\n    PATTERN111: 7\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRUtil\r\n//---------------------------------------------------------------------\r\n\r\nlet QRUtil = {\r\n\r\n    PATTERN_POSITION_TABLE: [\r\n        [],\r\n        [6, 18],\r\n        [6, 22],\r\n        [6, 26],\r\n        [6, 30],\r\n        [6, 34],\r\n        [6, 22, 38],\r\n        [6, 24, 42],\r\n        [6, 26, 46],\r\n        [6, 28, 50],\r\n        [6, 30, 54],\r\n        [6, 32, 58],\r\n        [6, 34, 62],\r\n        [6, 26, 46, 66],\r\n        [6, 26, 48, 70],\r\n        [6, 26, 50, 74],\r\n        [6, 30, 54, 78],\r\n        [6, 30, 56, 82],\r\n        [6, 30, 58, 86],\r\n        [6, 34, 62, 90],\r\n        [6, 28, 50, 72, 94],\r\n        [6, 26, 50, 74, 98],\r\n        [6, 30, 54, 78, 102],\r\n        [6, 28, 54, 80, 106],\r\n        [6, 32, 58, 84, 110],\r\n        [6, 30, 58, 86, 114],\r\n        [6, 34, 62, 90, 118],\r\n        [6, 26, 50, 74, 98, 122],\r\n        [6, 30, 54, 78, 102, 126],\r\n        [6, 26, 52, 78, 104, 130],\r\n        [6, 30, 56, 82, 108, 134],\r\n        [6, 34, 60, 86, 112, 138],\r\n        [6, 30, 58, 86, 114, 142],\r\n        [6, 34, 62, 90, 118, 146],\r\n        [6, 30, 54, 78, 102, 126, 150],\r\n        [6, 24, 50, 76, 102, 128, 154],\r\n        [6, 28, 54, 80, 106, 132, 158],\r\n        [6, 32, 58, 84, 110, 136, 162],\r\n        [6, 26, 54, 82, 110, 138, 166],\r\n        [6, 30, 58, 86, 114, 142, 170]\r\n    ],\r\n\r\n    G15: (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\r\n    G18: (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\r\n    G15_MASK: (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1),\r\n\r\n    getBCHTypeInfo: function (data) {\r\n        let d = data << 10;\r\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\r\n            d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15)));\r\n        }\r\n        return ((data << 10) | d) ^ QRUtil.G15_MASK;\r\n    },\r\n\r\n    getBCHTypeNumber: function (data) {\r\n        let d = data << 12;\r\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\r\n            d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18)));\r\n        }\r\n        return (data << 12) | d;\r\n    },\r\n\r\n    getBCHDigit: function (data) {\r\n\r\n        let digit = 0;\r\n\r\n        while (data != 0) {\r\n            digit++;\r\n            data >>>= 1;\r\n        }\r\n\r\n        return digit;\r\n    },\r\n\r\n    getPatternPosition: function (typeNumber) {\r\n        return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\r\n    },\r\n\r\n    getMask: function (maskPattern, i, j) {\r\n\r\n        switch (maskPattern) {\r\n\r\n            case QRMaskPattern.PATTERN000: return (i + j) % 2 == 0;\r\n            case QRMaskPattern.PATTERN001: return i % 2 == 0;\r\n            case QRMaskPattern.PATTERN010: return j % 3 == 0;\r\n            case QRMaskPattern.PATTERN011: return (i + j) % 3 == 0;\r\n            case QRMaskPattern.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\r\n            case QRMaskPattern.PATTERN101: return (i * j) % 2 + (i * j) % 3 == 0;\r\n            case QRMaskPattern.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 == 0;\r\n            case QRMaskPattern.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 == 0;\r\n\r\n            default:\r\n                throw new Error(\"bad maskPattern:\" + maskPattern);\r\n        }\r\n    },\r\n\r\n    getErrorCorrectPolynomial: function (errorCorrectLength) {\r\n\r\n        let a = new QRPolynomial([1], 0);\r\n\r\n        for (let i = 0; i < errorCorrectLength; i++) {\r\n            a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\r\n        }\r\n\r\n        return a;\r\n    },\r\n\r\n    getLengthInBits: function (mode, type) {\r\n\r\n        if (1 <= type && type < 10) {\r\n\r\n            // 1 - 9\r\n\r\n            switch (mode) {\r\n                case QRMode.MODE_NUMBER: return 10;\r\n                case QRMode.MODE_ALPHA_NUM: return 9;\r\n                case QRMode.MODE_8BIT_BYTE: return 8;\r\n                case QRMode.MODE_KANJI: return 8;\r\n                default:\r\n                    throw new Error(\"mode:\" + mode);\r\n            }\r\n\r\n        } else if (type < 27) {\r\n\r\n            // 10 - 26\r\n\r\n            switch (mode) {\r\n                case QRMode.MODE_NUMBER: return 12;\r\n                case QRMode.MODE_ALPHA_NUM: return 11;\r\n                case QRMode.MODE_8BIT_BYTE: return 16;\r\n                case QRMode.MODE_KANJI: return 10;\r\n                default:\r\n                    throw new Error(\"mode:\" + mode);\r\n            }\r\n\r\n        } else if (type < 41) {\r\n\r\n            // 27 - 40\r\n\r\n            switch (mode) {\r\n                case QRMode.MODE_NUMBER: return 14;\r\n                case QRMode.MODE_ALPHA_NUM: return 13;\r\n                case QRMode.MODE_8BIT_BYTE: return 16;\r\n                case QRMode.MODE_KANJI: return 12;\r\n                default:\r\n                    throw new Error(\"mode:\" + mode);\r\n            }\r\n\r\n        } else {\r\n            throw new Error(\"type:\" + type);\r\n        }\r\n    },\r\n\r\n    getLostPoint: function (qrCode) {\r\n\r\n        let moduleCount = qrCode.getModuleCount();\r\n\r\n        let lostPoint = 0;\r\n\r\n        // LEVEL1\r\n\r\n        for (let row = 0; row < moduleCount; row++) {\r\n\r\n            for (let col = 0; col < moduleCount; col++) {\r\n\r\n                let sameCount = 0;\r\n                let dark = qrCode.isDark(row, col);\r\n\r\n                for (let r = -1; r <= 1; r++) {\r\n\r\n                    if (row + r < 0 || moduleCount <= row + r) {\r\n                        continue;\r\n                    }\r\n\r\n                    for (let c = -1; c <= 1; c++) {\r\n\r\n                        if (col + c < 0 || moduleCount <= col + c) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (r == 0 && c == 0) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (dark == qrCode.isDark(row + r, col + c)) {\r\n                            sameCount++;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (sameCount > 5) {\r\n                    lostPoint += (3 + sameCount - 5);\r\n                }\r\n            }\r\n        }\r\n\r\n        // LEVEL2\r\n\r\n        for (let row = 0; row < moduleCount - 1; row++) {\r\n            for (let col = 0; col < moduleCount - 1; col++) {\r\n                let count = 0;\r\n                if (qrCode.isDark(row, col)) count++;\r\n                if (qrCode.isDark(row + 1, col)) count++;\r\n                if (qrCode.isDark(row, col + 1)) count++;\r\n                if (qrCode.isDark(row + 1, col + 1)) count++;\r\n                if (count == 0 || count == 4) {\r\n                    lostPoint += 3;\r\n                }\r\n            }\r\n        }\r\n\r\n        // LEVEL3\r\n\r\n        for (let row = 0; row < moduleCount; row++) {\r\n            for (let col = 0; col < moduleCount - 6; col++) {\r\n                if (qrCode.isDark(row, col)\r\n                    && !qrCode.isDark(row, col + 1)\r\n                    && qrCode.isDark(row, col + 2)\r\n                    && qrCode.isDark(row, col + 3)\r\n                    && qrCode.isDark(row, col + 4)\r\n                    && !qrCode.isDark(row, col + 5)\r\n                    && qrCode.isDark(row, col + 6)) {\r\n                    lostPoint += 40;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let col = 0; col < moduleCount; col++) {\r\n            for (let row = 0; row < moduleCount - 6; row++) {\r\n                if (qrCode.isDark(row, col)\r\n                    && !qrCode.isDark(row + 1, col)\r\n                    && qrCode.isDark(row + 2, col)\r\n                    && qrCode.isDark(row + 3, col)\r\n                    && qrCode.isDark(row + 4, col)\r\n                    && !qrCode.isDark(row + 5, col)\r\n                    && qrCode.isDark(row + 6, col)) {\r\n                    lostPoint += 40;\r\n                }\r\n            }\r\n        }\r\n\r\n        // LEVEL4\r\n\r\n        let darkCount = 0;\r\n\r\n        for (let col = 0; col < moduleCount; col++) {\r\n            for (let row = 0; row < moduleCount; row++) {\r\n                if (qrCode.isDark(row, col)) {\r\n                    darkCount++;\r\n                }\r\n            }\r\n        }\r\n\r\n        let ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\r\n        lostPoint += ratio * 10;\r\n\r\n        return lostPoint;\r\n    }\r\n\r\n};\r\n\r\n\r\n//---------------------------------------------------------------------\r\n// QRMath\r\n//---------------------------------------------------------------------\r\n\r\nlet QRMath = {\r\n\r\n    glog: function (n) {\r\n\r\n        if (n < 1) {\r\n            throw new Error(\"glog(\" + n + \")\");\r\n        }\r\n\r\n        return QRMath.LOG_TABLE[n];\r\n    },\r\n\r\n    gexp: function (n) {\r\n\r\n        while (n < 0) {\r\n            n += 255;\r\n        }\r\n\r\n        while (n >= 256) {\r\n            n -= 255;\r\n        }\r\n\r\n        return QRMath.EXP_TABLE[n];\r\n    },\r\n\r\n    EXP_TABLE: new Array(256),\r\n\r\n    LOG_TABLE: new Array(256)\r\n\r\n};\r\n\r\nfor (let i = 0; i < 8; i++) {\r\n    QRMath.EXP_TABLE[i] = 1 << i;\r\n}\r\nfor (let i = 8; i < 256; i++) {\r\n    QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4]\r\n        ^ QRMath.EXP_TABLE[i - 5]\r\n        ^ QRMath.EXP_TABLE[i - 6]\r\n        ^ QRMath.EXP_TABLE[i - 8];\r\n}\r\nfor (let i = 0; i < 255; i++) {\r\n    QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\r\n}\r\n\r\n//---------------------------------------------------------------------\r\n// QRPolynomial\r\n//---------------------------------------------------------------------\r\n\r\nfunction QRPolynomial(num, shift) {\r\n\r\n    if (num.length == undefined) {\r\n        throw new Error(num.length + \"/\" + shift);\r\n    }\r\n\r\n    let offset = 0;\r\n\r\n    while (offset < num.length && num[offset] == 0) {\r\n        offset++;\r\n    }\r\n\r\n    this.num = new Array(num.length - offset + shift);\r\n    for (let i = 0; i < num.length - offset; i++) {\r\n        this.num[i] = num[i + offset];\r\n    }\r\n}\r\n\r\nQRPolynomial.prototype = {\r\n\r\n    get: function (index) {\r\n        return this.num[index];\r\n    },\r\n\r\n    getLength: function () {\r\n        return this.num.length;\r\n    },\r\n\r\n    multiply: function (e) {\r\n\r\n        let num = new Array(this.getLength() + e.getLength() - 1);\r\n\r\n        for (let i = 0; i < this.getLength(); i++) {\r\n            for (let j = 0; j < e.getLength(); j++) {\r\n                num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\r\n            }\r\n        }\r\n\r\n        return new QRPolynomial(num, 0);\r\n    },\r\n\r\n    mod: function (e) {\r\n\r\n        if (this.getLength() - e.getLength() < 0) {\r\n            return this;\r\n        }\r\n\r\n        let ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\r\n\r\n        let num = new Array(this.getLength());\r\n\r\n        for (let i = 0; i < this.getLength(); i++) {\r\n            num[i] = this.get(i);\r\n        }\r\n\r\n        for (let i = 0; i < e.getLength(); i++) {\r\n            num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\r\n        }\r\n\r\n        // recursive call\r\n        return new QRPolynomial(num, 0).mod(e);\r\n    }\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRRSBlock\r\n//---------------------------------------------------------------------\r\n\r\nfunction QRRSBlock(totalCount, dataCount) {\r\n    this.totalCount = totalCount;\r\n    this.dataCount = dataCount;\r\n}\r\n\r\nQRRSBlock.RS_BLOCK_TABLE = [\r\n\r\n    // L\r\n    // M\r\n    // Q\r\n    // H\r\n\r\n    // 1\r\n    [1, 26, 19],\r\n    [1, 26, 16],\r\n    [1, 26, 13],\r\n    [1, 26, 9],\r\n\r\n    // 2\r\n    [1, 44, 34],\r\n    [1, 44, 28],\r\n    [1, 44, 22],\r\n    [1, 44, 16],\r\n\r\n    // 3\r\n    [1, 70, 55],\r\n    [1, 70, 44],\r\n    [2, 35, 17],\r\n    [2, 35, 13],\r\n\r\n    // 4\t\t\r\n    [1, 100, 80],\r\n    [2, 50, 32],\r\n    [2, 50, 24],\r\n    [4, 25, 9],\r\n\r\n    // 5\r\n    [1, 134, 108],\r\n    [2, 67, 43],\r\n    [2, 33, 15, 2, 34, 16],\r\n    [2, 33, 11, 2, 34, 12],\r\n\r\n    // 6\r\n    [2, 86, 68],\r\n    [4, 43, 27],\r\n    [4, 43, 19],\r\n    [4, 43, 15],\r\n\r\n    // 7\t\t\r\n    [2, 98, 78],\r\n    [4, 49, 31],\r\n    [2, 32, 14, 4, 33, 15],\r\n    [4, 39, 13, 1, 40, 14],\r\n\r\n    // 8\r\n    [2, 121, 97],\r\n    [2, 60, 38, 2, 61, 39],\r\n    [4, 40, 18, 2, 41, 19],\r\n    [4, 40, 14, 2, 41, 15],\r\n\r\n    // 9\r\n    [2, 146, 116],\r\n    [3, 58, 36, 2, 59, 37],\r\n    [4, 36, 16, 4, 37, 17],\r\n    [4, 36, 12, 4, 37, 13],\r\n\r\n    // 10\t\t\r\n    [2, 86, 68, 2, 87, 69],\r\n    [4, 69, 43, 1, 70, 44],\r\n    [6, 43, 19, 2, 44, 20],\r\n    [6, 43, 15, 2, 44, 16],\r\n\r\n    // 11\r\n    [4, 101, 81],\r\n    [1, 80, 50, 4, 81, 51],\r\n    [4, 50, 22, 4, 51, 23],\r\n    [3, 36, 12, 8, 37, 13],\r\n\r\n    // 12\r\n    [2, 116, 92, 2, 117, 93],\r\n    [6, 58, 36, 2, 59, 37],\r\n    [4, 46, 20, 6, 47, 21],\r\n    [7, 42, 14, 4, 43, 15],\r\n\r\n    // 13\r\n    [4, 133, 107],\r\n    [8, 59, 37, 1, 60, 38],\r\n    [8, 44, 20, 4, 45, 21],\r\n    [12, 33, 11, 4, 34, 12],\r\n\r\n    // 14\r\n    [3, 145, 115, 1, 146, 116],\r\n    [4, 64, 40, 5, 65, 41],\r\n    [11, 36, 16, 5, 37, 17],\r\n    [11, 36, 12, 5, 37, 13],\r\n\r\n    // 15\r\n    [5, 109, 87, 1, 110, 88],\r\n    [5, 65, 41, 5, 66, 42],\r\n    [5, 54, 24, 7, 55, 25],\r\n    [11, 36, 12],\r\n\r\n    // 16\r\n    [5, 122, 98, 1, 123, 99],\r\n    [7, 73, 45, 3, 74, 46],\r\n    [15, 43, 19, 2, 44, 20],\r\n    [3, 45, 15, 13, 46, 16],\r\n\r\n    // 17\r\n    [1, 135, 107, 5, 136, 108],\r\n    [10, 74, 46, 1, 75, 47],\r\n    [1, 50, 22, 15, 51, 23],\r\n    [2, 42, 14, 17, 43, 15],\r\n\r\n    // 18\r\n    [5, 150, 120, 1, 151, 121],\r\n    [9, 69, 43, 4, 70, 44],\r\n    [17, 50, 22, 1, 51, 23],\r\n    [2, 42, 14, 19, 43, 15],\r\n\r\n    // 19\r\n    [3, 141, 113, 4, 142, 114],\r\n    [3, 70, 44, 11, 71, 45],\r\n    [17, 47, 21, 4, 48, 22],\r\n    [9, 39, 13, 16, 40, 14],\r\n\r\n    // 20\r\n    [3, 135, 107, 5, 136, 108],\r\n    [3, 67, 41, 13, 68, 42],\r\n    [15, 54, 24, 5, 55, 25],\r\n    [15, 43, 15, 10, 44, 16],\r\n\r\n    // 21\r\n    [4, 144, 116, 4, 145, 117],\r\n    [17, 68, 42],\r\n    [17, 50, 22, 6, 51, 23],\r\n    [19, 46, 16, 6, 47, 17],\r\n\r\n    // 22\r\n    [2, 139, 111, 7, 140, 112],\r\n    [17, 74, 46],\r\n    [7, 54, 24, 16, 55, 25],\r\n    [34, 37, 13],\r\n\r\n    // 23\r\n    [4, 151, 121, 5, 152, 122],\r\n    [4, 75, 47, 14, 76, 48],\r\n    [11, 54, 24, 14, 55, 25],\r\n    [16, 45, 15, 14, 46, 16],\r\n\r\n    // 24\r\n    [6, 147, 117, 4, 148, 118],\r\n    [6, 73, 45, 14, 74, 46],\r\n    [11, 54, 24, 16, 55, 25],\r\n    [30, 46, 16, 2, 47, 17],\r\n\r\n    // 25\r\n    [8, 132, 106, 4, 133, 107],\r\n    [8, 75, 47, 13, 76, 48],\r\n    [7, 54, 24, 22, 55, 25],\r\n    [22, 45, 15, 13, 46, 16],\r\n\r\n    // 26\r\n    [10, 142, 114, 2, 143, 115],\r\n    [19, 74, 46, 4, 75, 47],\r\n    [28, 50, 22, 6, 51, 23],\r\n    [33, 46, 16, 4, 47, 17],\r\n\r\n    // 27\r\n    [8, 152, 122, 4, 153, 123],\r\n    [22, 73, 45, 3, 74, 46],\r\n    [8, 53, 23, 26, 54, 24],\r\n    [12, 45, 15, 28, 46, 16],\r\n\r\n    // 28\r\n    [3, 147, 117, 10, 148, 118],\r\n    [3, 73, 45, 23, 74, 46],\r\n    [4, 54, 24, 31, 55, 25],\r\n    [11, 45, 15, 31, 46, 16],\r\n\r\n    // 29\r\n    [7, 146, 116, 7, 147, 117],\r\n    [21, 73, 45, 7, 74, 46],\r\n    [1, 53, 23, 37, 54, 24],\r\n    [19, 45, 15, 26, 46, 16],\r\n\r\n    // 30\r\n    [5, 145, 115, 10, 146, 116],\r\n    [19, 75, 47, 10, 76, 48],\r\n    [15, 54, 24, 25, 55, 25],\r\n    [23, 45, 15, 25, 46, 16],\r\n\r\n    // 31\r\n    [13, 145, 115, 3, 146, 116],\r\n    [2, 74, 46, 29, 75, 47],\r\n    [42, 54, 24, 1, 55, 25],\r\n    [23, 45, 15, 28, 46, 16],\r\n\r\n    // 32\r\n    [17, 145, 115],\r\n    [10, 74, 46, 23, 75, 47],\r\n    [10, 54, 24, 35, 55, 25],\r\n    [19, 45, 15, 35, 46, 16],\r\n\r\n    // 33\r\n    [17, 145, 115, 1, 146, 116],\r\n    [14, 74, 46, 21, 75, 47],\r\n    [29, 54, 24, 19, 55, 25],\r\n    [11, 45, 15, 46, 46, 16],\r\n\r\n    // 34\r\n    [13, 145, 115, 6, 146, 116],\r\n    [14, 74, 46, 23, 75, 47],\r\n    [44, 54, 24, 7, 55, 25],\r\n    [59, 46, 16, 1, 47, 17],\r\n\r\n    // 35\r\n    [12, 151, 121, 7, 152, 122],\r\n    [12, 75, 47, 26, 76, 48],\r\n    [39, 54, 24, 14, 55, 25],\r\n    [22, 45, 15, 41, 46, 16],\r\n\r\n    // 36\r\n    [6, 151, 121, 14, 152, 122],\r\n    [6, 75, 47, 34, 76, 48],\r\n    [46, 54, 24, 10, 55, 25],\r\n    [2, 45, 15, 64, 46, 16],\r\n\r\n    // 37\r\n    [17, 152, 122, 4, 153, 123],\r\n    [29, 74, 46, 14, 75, 47],\r\n    [49, 54, 24, 10, 55, 25],\r\n    [24, 45, 15, 46, 46, 16],\r\n\r\n    // 38\r\n    [4, 152, 122, 18, 153, 123],\r\n    [13, 74, 46, 32, 75, 47],\r\n    [48, 54, 24, 14, 55, 25],\r\n    [42, 45, 15, 32, 46, 16],\r\n\r\n    // 39\r\n    [20, 147, 117, 4, 148, 118],\r\n    [40, 75, 47, 7, 76, 48],\r\n    [43, 54, 24, 22, 55, 25],\r\n    [10, 45, 15, 67, 46, 16],\r\n\r\n    // 40\r\n    [19, 148, 118, 6, 149, 119],\r\n    [18, 75, 47, 31, 76, 48],\r\n    [34, 54, 24, 34, 55, 25],\r\n    [20, 45, 15, 61, 46, 16]\r\n];\r\n\r\nQRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {\r\n\r\n    let rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\r\n\r\n    if (rsBlock == undefined) {\r\n        throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\r\n    }\r\n\r\n    let length = rsBlock.length / 3;\r\n\r\n    let list = new Array();\r\n\r\n    for (let i = 0; i < length; i++) {\r\n\r\n        let count = rsBlock[i * 3 + 0];\r\n        let totalCount = rsBlock[i * 3 + 1];\r\n        let dataCount = rsBlock[i * 3 + 2];\r\n\r\n        for (let j = 0; j < count; j++) {\r\n            list.push(new QRRSBlock(totalCount, dataCount));\r\n        }\r\n    }\r\n\r\n    return list;\r\n}\r\n\r\nQRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {\r\n\r\n    switch (errorCorrectLevel) {\r\n        case QRErrorCorrectLevel.L:\r\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\r\n        case QRErrorCorrectLevel.M:\r\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\r\n        case QRErrorCorrectLevel.Q:\r\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\r\n        case QRErrorCorrectLevel.H:\r\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\n\r\n//---------------------------------------------------------------------\r\n// QRBitBuffer\r\n//---------------------------------------------------------------------\r\n\r\nfunction QRBitBuffer() {\r\n    this.buffer = new Array();\r\n    this.length = 0;\r\n}\r\n\r\nQRBitBuffer.prototype = {\r\n\r\n    get: function (index) {\r\n        let bufIndex = Math.floor(index / 8);\r\n        return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) == 1;\r\n    },\r\n\r\n    put: function (num, length) {\r\n        for (let i = 0; i < length; i++) {\r\n            this.putBit(((num >>> (length - i - 1)) & 1) == 1);\r\n        }\r\n    },\r\n\r\n    getLengthInBits: function () {\r\n        return this.length;\r\n    },\r\n\r\n    putBit: function (bit) {\r\n\r\n        let bufIndex = Math.floor(this.length / 8);\r\n        if (this.buffer.length <= bufIndex) {\r\n            this.buffer.push(0);\r\n        }\r\n\r\n        if (bit) {\r\n            this.buffer[bufIndex] |= (0x80 >>> (this.length % 8));\r\n        }\r\n\r\n        this.length++;\r\n    }\r\n};\r\n\r\n/**\r\n * 二维码组件\r\n */\r\nlet CQRCode = cc.Class({\r\n    extends: cc.Graphics,\r\n    properties: {\r\n        string: {\r\n            default: 'Hello World!',\r\n            notify(oldValue) {\r\n                if (this.string === oldValue) {\r\n                    return;\r\n                }\r\n                this.setContent();\r\n            },\r\n        },\r\n\r\n        backColor: {\r\n            type: cc.Color,\r\n            default: cc.Color.WHITE,\r\n            notify() {\r\n                this.setContent();\r\n            },\r\n        },\r\n\r\n        foreColor: {\r\n            type: cc.Color,\r\n            default: cc.Color.BLACK,\r\n            notify(old) {\r\n                this.node.color = this.foreColor;\r\n                this.setContent();\r\n            },\r\n        },\r\n\r\n        margin: {\r\n            type: cc.Float,\r\n            default: 10,\r\n            notify(old) {\r\n                if (old === this.margin) {\r\n                    return;\r\n                }\r\n                this.setContent();\r\n            }\r\n        },\r\n\r\n        _size: 200,\r\n        size: {\r\n            type: cc.Float,\r\n            get() {\r\n                return this._size;\r\n            },\r\n\r\n            set(value) {\r\n                if (this._size === value) {\r\n                    return;\r\n                }\r\n                \r\n                this.node.setContentSize(value, value);\r\n                this.setContent();\r\n                this._size = value;\r\n            },\r\n        }\r\n    },\r\n\r\n    onLoad() {\r\n        this.node.setContentSize(this._size, this._size);\r\n        this.setContent();\r\n    },\r\n\r\n    setString(customData, sender) {\r\n        if (sender.string) {\r\n            this.string = sender.string;\r\n        }\r\n    },\r\n\r\n    setContent() {\r\n        this.clear();\r\n        //背景色\r\n        this.fillColor = this.backColor;\r\n        let width = this.node.width;\r\n        let offsetX = -width * this.node.anchorX;\r\n        let offsetY = -width * this.node.anchorY;\r\n        this.rect(offsetX, offsetY, width, width);\r\n        this.fill();\r\n        this.close();\r\n        //生成二维码数据\r\n        let qrcode = new QRCode(-1, 2);\r\n        qrcode.addData(this.string);\r\n        qrcode.make();\r\n        this.fillColor = this.foreColor;\r\n        let size = width - this.margin * 2;\r\n        let num = qrcode.getModuleCount();\r\n        \r\n        let tileW = size / num;\r\n        let tileH = size / num;\r\n        let w = Math.ceil(tileW);\r\n        let h = Math.ceil(tileH);\r\n        for (let row = 0; row < num; row++) {\r\n            for (let col = 0; col < num; col++) {\r\n                if (qrcode.isDark(row, col)) {\r\n                    this.rect(offsetX + this.margin + col * tileW, offsetX + size - tileH - Math.round(row * tileH) + this.margin, w, h);\r\n                    this.fill();\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    \r\n});\r\n\r\ncc.game.once(cc.game.EVENT_ENGINE_INITED, function () {\r\n    CQRCode._assembler = cc.Graphics._assembler;\r\n});\r\n\r\ncc.Class.Attr.setClassAttr(CQRCode, 'lineWidth', 'visible', false);\r\ncc.Class.Attr.setClassAttr(CQRCode, 'lineJoin', 'visible', false);\r\ncc.Class.Attr.setClassAttr(CQRCode, 'lineCap', 'visible', false);\r\ncc.Class.Attr.setClassAttr(CQRCode, 'strokeColor', 'visible', false);\r\ncc.Class.Attr.setClassAttr(CQRCode, 'miterLimit', 'visible', false);\r\ncc.Class.Attr.setClassAttr(CQRCode, 'fillColor', 'visible', false);\r\n\r\nmodule.exports = CQRCode;"]}