{"version":3,"sources":["assets\\Slot8\\Slot8Script\\Slot8ChooseLine.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Dialog from \"../../Lobby/LobbyScript/Script/common/Dialog\";\nimport Tween from \"../../Lobby/LobbyScript/Script/common/Tween\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Slot8ChooseLine extends Dialog {\n\n    @property(cc.Node)\n    nodeBox:cc.Node = null;\n    @property(cc.Button)\n    btnClose: cc.Button = null;\n    @property(cc.Node)\n    lineParent: cc.Node = null;\n\n    listToggle: cc.Toggle[] = [];\n    private readonly SELECTED = \"selected\";\n\n    onSelectedChanged: (lines: Array<number>) => void = null;\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n\n    start () {\n        for(let i = 0; i < this.lineParent.childrenCount; i++) {\n            let node = this.lineParent.children[i];\n            let toggle = node.getComponent(cc.Toggle);\n            this.listToggle.push(toggle);\n            node[this.SELECTED] = true;\n            node.on('click', () => {\n                node[this.SELECTED] = !node[this.SELECTED];\n                // node.opacity = node[this.SELECTED] ? 255 : 80;\n                // toggle.isChecked = node[this.SELECTED];\n                if(this.onSelectedChanged != null) this.onSelectedChanged(this.getLineSelected());                \n            });\n        }\n    }\n\n   \n\n    getLineSelected() {\n        let lines = new Array<number>();\n        for(let i = 0; i < this.listToggle.length; i++) {\n            let node = this.listToggle[i].node;\n            if (typeof node[this.SELECTED] == \"undefined\" || node[this.SELECTED]) {\n                lines.push(i + 1);\n            }\n        }\n       \n        this.btnClose.interactable = lines.length > 0;\n        return lines;\n    }\n\n    selectAll() {\n        for(let i = 0; i < this.listToggle.length; i++) {   \n            this.listToggle[i].node[this.SELECTED] = true;\n            // this.listToggle[i].node.opacity =  this.listToggle[i].node[this.SELECTED] ? 255 : 80;\n            this.listToggle[i].isChecked = true;        \n        }\n        if(this.onSelectedChanged != null) this.onSelectedChanged(this.getLineSelected());\n    }\n\n    deSelectAll() {\n        for(let i = 0; i < this.listToggle.length; i++) {   \n            this.listToggle[i].node[this.SELECTED] = false;\n            // this.listToggle[i].node.opacity =  this.listToggle[i].node[this.SELECTED] ? 255 : 80;\n            this.listToggle[i].isChecked = false;        \n        }\n        if(this.onSelectedChanged != null) this.onSelectedChanged(this.getLineSelected());\n    }\n\n    selectEven() {\n        for(let i = 0; i < this.listToggle.length; i++) {    \n            this.listToggle[i].node[this.SELECTED] = i % 2 != 0;\n            // this.listToggle[i].node.opacity = this.listToggle[i].node[this.SELECTED] ? 255 : 80;        \n            this.listToggle[i].isChecked = i % 2 !== 0;           \n        }\n        if(this.onSelectedChanged != null) this.onSelectedChanged(this.getLineSelected());\n    }\n\n    selectOdd() {\n        for(let i = 0; i < this.listToggle.length; i++) {    \n            this.listToggle[i].node[this.SELECTED] = i % 2 == 0;\n            // this.listToggle[i].node.opacity = this.listToggle[i].node[this.SELECTED] ? 255 : 80;        \n            this.listToggle[i].isChecked = i % 2 == 0;           \n        }\n        if(this.onSelectedChanged != null) this.onSelectedChanged(this.getLineSelected());\n    }\n\n    showPopup(arrLineSelected) {\n        super.show();\n        // Tween.showPopup(this.nodeBox,this.nodeBox.parent);\n\n        for(let i = 0; i < this.listToggle.length; i++) {\n            let node = this.listToggle[i];\n            this.listToggle[i].isChecked = this.listToggle[i].node[this.SELECTED];    \n            // this.listToggle[i].node.opacity = this.listToggle[i].node[this.SELECTED] ? 255 : 80;        \n        }\n\n    }\n\n    hide() {\n       \n        Tween.hidePopup(this.nodeBox,this.nodeBox.parent,false);\n    }\n\n\n\n    // update (dt) {}\n}\n"]}