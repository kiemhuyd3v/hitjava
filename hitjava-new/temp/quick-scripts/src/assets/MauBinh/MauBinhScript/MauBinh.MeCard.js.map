{"version":3,"sources":["assets\\MauBinh\\MauBinhScript\\MauBinh.MeCard.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import MauBinhController from \"./MauBinh.Controller\";\nimport DragCardController from \"./MauBinh.DragCard\";\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class MeCardController extends cc.Component {\n\n    public static instance: MeCardController = null;\n\n    @property(cc.Node)\n    imgFocus: cc.Node = null;\n    @property(cc.Node)\n    imgCard: cc.Node = null;\n    @property(cc.Node)\n    imgShadow: cc.Node = null;\n\n    card_info = null;\n    initPos = null;\n    canDrag = null;\n    dragging: boolean;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        MeCardController.instance = this;\n\n        this.initPos = this.node.position;\n    }\n\n    start() { }\n\n    onEnable() {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onBeginDrag, this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onDrag, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onEndDrag, this);\n    }\n\n    onDisable() {\n        this.node.off(cc.Node.EventType.TOUCH_START, this.onBeginDrag, this);\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onDrag, this);\n        this.node.off(cc.Node.EventType.TOUCH_END, this.onEndDrag, this);\n    }\n\n    activeDrag() {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onBeginDrag, this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onDrag, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onEndDrag, this);\n    }\n\n    offDrag() {\n        this.node.off(cc.Node.EventType.TOUCH_START, this.onBeginDrag, this);\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onDrag, this);\n        this.node.off(cc.Node.EventType.TOUCH_END, this.onEndDrag, this);\n    }\n\n    onBeginDrag(event) {\n        //  cc.log(\"onBeginDrag : \", this.node.name);\n        //  cc.log(\"onBeginDrag initPos : \", this.initPos);\n        //  cc.log(\"onBeginDrag card_info : \", this.card_info);\n        MauBinhController.instance.cardSelect(this.card_info, this.node.position, parseInt(this.node.name) - 1);\n    }\n\n    onDrag(event) {\n        this.dragging = true;\n        var delta = event.getDelta();\n\n        var currentPos = this.node.position;\n        this.node.x = currentPos.x + delta.x;\n        this.node.y = currentPos.y + delta.y;\n        DragCardController.instance.updatePos(currentPos.x + delta.x, currentPos.y + delta.y - 95);\n    }\n\n    onEndDrag(event) {\n        this.dragging = false;\n        this.node.position = this.initPos;\n        DragCardController.instance.endMove();\n    }\n\n    resetState() {\n        if (this.initPos) {\n            this.node.position = this.initPos;\n            this.setCardFocus(false);\n            this.setCardShadow(false);\n        }\n    }\n\n    setupCard(data, src) {\n        this.card_info = data;\n        //  cc.log(\"MauBinh MeCard card_info : \", data);\n        this.setCardFocus(false);\n        this.setCardShadow(false);\n\n        cc.tween(this.node)\n            .to(0.1, { scaleX: 0 })\n            .call(() => {\n                this.imgCard.getComponent(cc.Sprite).spriteFrame = src;\n            })\n            .to(0.1, { scaleX: 1 })\n            .start();\n    }\n\n    updateCard(data, src) {\n        this.card_info.card = data;\n        this.setCardFocus(false);\n        this.setCardShadow(false);\n        this.setCardSrc(src);\n    }\n\n    setCardSrc(src) {\n        this.imgCard.getComponent(cc.Sprite).spriteFrame = src;\n    }\n\n    setCardShadow(state) {\n        this.imgShadow.active = state;\n    }\n\n    setCardFocus(state) {\n        this.imgFocus.active = state;\n    }\n\n    setIsActive(state) {\n        this.node.active = state;\n    }\n\n    getIsActive() {\n        return this.node.active;\n    }\n\n    // update (dt) {}\n}\n"]}