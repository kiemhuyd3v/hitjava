{"version":3,"sources":["assets\\OanTuTi\\OanTuTiScript\\OanTuTi.OanTuTiController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Configs from \"../../Loading/src/Configs\";\nimport MiniGame from \"../../Lobby/LobbyScript/MiniGame\";\nimport App from \"../../Lobby/LobbyScript/Script/common/App\";\nimport BroadcastReceiver from \"../../Lobby/LobbyScript/Script/common/BroadcastReceiver\";\nimport Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\nimport ShootFishNetworkClient from \"../../Lobby/LobbyScript/Script/networks/ShootFishNetworkClient\";\nimport PopupCoinTransfer from \"./OanTuTi.PopupCoinTransfer\";\nimport Http from \"../../Loading/src/Http\";\nimport SPUtils from \"../../Lobby/LobbyScript/Script/common/SPUtils\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class OanTuTiController extends MiniGame {\n\n    @property(cc.Label)\n    public lblCoin: cc.Label = null;\n    @property(cc.Label)\n    public lblBet: cc.Label = null;\n    @property([cc.Button])\n    public btnBets: cc.Button[] = [];\n    @property(cc.Button)\n    public btnPlayNow: cc.Button = null;\n\n    @property(cc.Node)\n    public panelSelectBet: cc.Node = null;\n\n    @property(cc.Node)\n    public players: cc.Node = null;\n    @property(cc.Node)\n    public mePlayer: cc.Node = null;\n    @property(cc.Node)\n    public otherPlayer: cc.Node = null;\n\n    @property(cc.Node)\n    public panelSearchingMatch: cc.Node = null;\n    @property(cc.Node)\n    public panelPlaying: cc.Node = null;\n    @property(cc.Node)\n    public panelResult: cc.Node = null;\n\n    //searching\n    @property(cc.Label)\n    public lblSearching: cc.Label = null;\n    @property(cc.Button)\n    public btnCancel: cc.Button = null;\n\n    //playing\n    @property(cc.Label)\n    public lblTime: cc.Label = null;\n    @property(cc.Sprite)\n    public progressTime: cc.Sprite = null;\n    @property([cc.Button])\n    public btnPlays: cc.Button[] = [];\n    @property([cc.SpriteFrame])\n    public sprPlaysActive: cc.SpriteFrame[] = [];\n    @property([cc.SpriteFrame])\n    public sprPlaysNormal: cc.SpriteFrame[] = [];\n\n    //result\n    @property([cc.SpriteFrame])\n    public sprResults: cc.SpriteFrame[] = [];\n\n    @property(cc.Toggle)\n    public toggleAuto: cc.Toggle = null;\n\n    @property([cc.Node])\n    public popups: cc.Node[] = [];\n\n    @property(PopupCoinTransfer)\n    public popupCoinTransfer: PopupCoinTransfer = null;\n\n    private readonly listBet = [1000, 5000, 10000, 50000, 100000];\n    private readonly timePlaying = 10;\n    private remainTime = 0;\n    private lastBetValue = 0;\n    private isPlaying = false;\n\n    start() {\n        BroadcastReceiver.register(BroadcastReceiver.USER_UPDATE_COIN, () => {\n            if (!this.node.active) return;\n            this.lblCoin.string = Utils.formatNumber(Configs.Login.CoinFish);\n        }, this);\n        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\n\n        ShootFishNetworkClient.getInstance().addListener((route, push) => {\n            if (!this.node.active) return;\n            let routesLog = [\"OttOnMatching\", \"OttOnMatchStart\", \"OttOnMatchEnd\", \"OttOnMatchSolved\"];\n            if (routesLog.indexOf(route) >= 0) {\n           //     console.log(route);\n           //     console.log(push);\n            }\n            switch (route) {\n                case \"OttOnMatching\": {\n                    let otherNickname = \"\";\n                    let otherAvatar = \"\";\n                    if (push[\"userId1\"] == Configs.Login.UserIdFish) {\n                        otherNickname = push[\"nickname2\"];\n                        otherAvatar = push[\"avatar2\"];\n                    } else {\n                        otherNickname = push[\"nickname1\"];\n                        otherAvatar = push[\"avatar1\"];\n                    }\n\n                    this.panelSelectBet.active = false;\n                    this.panelPlaying.active = false;\n                    this.players.active = true;\n\n                    this.lblSearching.string = \"ĐÃ TÌM THẤY ĐỐI THỦ\";\n                    this.btnCancel.node.active = false;\n\n                    this.otherPlayer.active = true;\n                    this.otherPlayer.getChildByName(\"lblNickname\").getComponent(cc.Label).string = otherNickname;\n                    this.otherPlayer.getChildByName(\"sprAvatar\").getComponent(cc.Sprite).spriteFrame = App.instance.getAvatarSpriteFrame(otherAvatar);\n\n                    this.lblBet.string = \"CƯỢC: \" + (Math.floor(push[\"blind\"] / 1000)) + \"K\";\n                }\n                    break;\n                case \"OttOnMatchStart\": {\n                    this.panelSearchingMatch.active = false;\n                    this.panelPlaying.active = true;\n                    this.panelResult.active = false;\n                    this.players.active = true;\n\n                    this.remainTime = this.timePlaying;\n                    this.lblTime.node.parent.active = true;\n                    this.progressTime.fillRange = 1;\n\n                    for (let i = 0; i < this.btnPlays.length; i++) {\n                        this.btnPlays[i].interactable = true;\n                        this.btnPlays[i].getComponent(cc.Sprite).spriteFrame = this.sprPlaysActive[i];\n                    }\n                }\n                    break;\n                case \"OttOnMatchEnd\": {\n                    let result: number = push[\"result\"];///result: 0: hoà, 1: player1 thắng, 2: player2 thắng\n                    let changeCash1: number = push[\"changeCash1\"];\n                    let changeCash2: number = push[\"changeCash2\"];\n                    let blind: number = push[\"blind\"];\n\n                    let lblWin = this.panelResult.getChildByName(\"lblWin\");\n                    let lblLose = this.panelResult.getChildByName(\"lblLose\")\n\n                    if (push[\"userId1\"] == Configs.Login.UserIdFish) {\n                        if (result != 0) {\n                            if (result == 1) {\n                                lblWin.getComponent(cc.Label).string = \"+\" + Utils.formatNumber(changeCash1);\n                            } else {\n                                lblLose.getComponent(cc.Label).string = Utils.formatNumber(-blind);\n                            }\n                        }\n                        Configs.Login.CoinFish = push[\"cash1\"];\n                    } else {\n                        if (result != 0) {\n                            if (result == 2) {\n                                lblWin.getComponent(cc.Label).string = \"+\" + Utils.formatNumber(changeCash2);\n                            } else {\n                                lblLose.getComponent(cc.Label).string = Utils.formatNumber(-blind);\n                            }\n                        }\n                        Configs.Login.CoinFish = push[\"cash2\"];\n                    }\n                    BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\n\n                    this.scheduleOnce(() => {\n                        this.resetView();\n                        if (this.toggleAuto.isChecked) {\n                            this.selectBet(this.lastBetValue);\n                        } else {\n                            this.isPlaying = false;\n                        }\n                    }, 5);\n                }\n                case \"OttOnMatchSolved\": {\n                    this.panelResult.active = true;\n                    this.lblTime.node.parent.active = false;\n\n                    let result: number = push[\"result\"]; ///result: 0: hoà, 1: player1 thắng, 2: player2 thắng\n                    let choice1: number = push[\"choice1\"];\n                    let choice2: number = push[\"choice2\"];\n\n                    let meValue = this.panelResult.getChildByName(\"meValue\");\n                    let otherValue = this.panelResult.getChildByName(\"otherValue\");\n                    let meActive = meValue.getChildByName(\"active\");\n                    let otherActive = otherValue.getChildByName(\"active\");\n\n                    let lblWin = this.panelResult.getChildByName(\"lblWin\");\n                    lblWin.active = false;\n                    let lblLose = this.panelResult.getChildByName(\"lblLose\")\n                    lblLose.active = false;\n                    let hoa = this.panelResult.getChildByName(\"hoa\");\n                    hoa.active = false;\n                    let thang = this.panelResult.getChildByName(\"thang\");\n                    thang.active = false;\n                    let thua = this.panelResult.getChildByName(\"thua\");\n                    thua.active = false;\n\n                    if (push[\"userId1\"] == Configs.Login.UserIdFish) {\n                        meValue.getComponent(cc.Sprite).spriteFrame = this.sprResults[choice1];\n                        otherValue.getComponent(cc.Sprite).spriteFrame = this.sprResults[choice2];\n                        for (let i = 0; i < this.btnPlays.length; i++) {\n                            this.btnPlays[i].interactable = false;\n                            this.btnPlays[i].getComponent(cc.Sprite).spriteFrame = choice1 == i ? this.sprPlaysActive[i] : this.sprPlaysNormal[i];\n                        }\n\n                        if (result == 0) {\n                            hoa.active = true;\n                            hoa.getComponent(sp.Skeleton).setAnimation(0, \"animation\", false);\n                            meActive.active = true;\n                            otherActive.active = true;\n                        } else {\n                            if (result == 1) {\n                                thang.active = true;\n                                thang.getComponent(sp.Skeleton).setAnimation(0, \"animation\", false);\n                                lblWin.active = true;\n                                meActive.active = true;\n                                otherActive.active = false;\n                            } else {\n                                thua.active = true;\n                                thua.getComponent(sp.Skeleton).setAnimation(0, \"animation\", false);\n                                lblLose.active = true;\n                                meActive.active = false;\n                                otherActive.active = true;\n                            }\n                        }\n                    } else {\n                        meValue.getComponent(cc.Sprite).spriteFrame = this.sprResults[choice2];\n                        otherValue.getComponent(cc.Sprite).spriteFrame = this.sprResults[choice1];\n                        for (let i = 0; i < this.btnPlays.length; i++) {\n                            this.btnPlays[i].interactable = false;\n                            this.btnPlays[i].getComponent(cc.Sprite).spriteFrame = choice2 == i ? this.sprPlaysActive[i] : this.sprPlaysNormal[i];\n                        }\n\n                        if (result == 0) {\n                            hoa.active = true;\n                            hoa.getComponent(sp.Skeleton).setAnimation(0, \"animation\", false);\n                            meActive.active = true;\n                            otherActive.active = true;\n                        } else {\n                            if (result == 2) {\n                                thang.active = true;\n                                thang.getComponent(sp.Skeleton).setAnimation(0, \"animation\", false);\n                                lblWin.active = true;\n                                meActive.active = true;\n                                otherActive.active = false;\n                            } else {\n                                thua.active = true;\n                                thua.getComponent(sp.Skeleton).setAnimation(0, \"animation\", false);\n                                lblLose.active = true;\n                                meActive.active = false;\n                                otherActive.active = true;\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n        }, this);\n\n        for (let i = 0; i < this.btnBets.length; i++) {\n            this.btnBets[i].node.on(\"click\", () => {\n                this.selectBet(this.listBet[i]);\n            });\n        }\n        for (let i = 0; i < this.btnPlays.length; i++) {\n            this.btnPlays[i].node.on(\"click\", () => {\n                this.play(i);\n            });\n        }\n    }\n\n    update(dt: number) {\n        if (this.remainTime > 0) {\n            this.remainTime = Math.max(0, this.remainTime - dt);\n            let t = Math.round(this.remainTime);\n            this.lblTime.string = (t > 9 ? \"\" : \"0\") + t;\n            this.progressTime.fillRange = this.remainTime / this.timePlaying;\n        }\n    }\n\n    show() {\n        if (this.node.active) {\n            this.reOrder();\n            return;\n        }\n        super.show();\n        this.toggleAuto.isChecked = false;\n        this.resetView();\n    }\n\n    _onShowed() {\n        super._onShowed();\n        ShootFishNetworkClient.getInstance().checkConnect((isLogined) => {\n            if (!this.node.active) return;\n            if (!isLogined) {\n                this.dismiss();\n                return;\n            }\n            BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\n            if (Configs.Login.CoinFish <= 0) {\n                App.instance.confirmDialog.show3(\"Tiền trong game của bạn đã hết, bạn có muốn chuyển tiền vào không?\", \"Có\", (isConfirm) => {\n                    if (isConfirm) {\n                        this.popupCoinTransfer.show();\n                    }\n                });\n            }\n        });\n    }\nactBack() {\n\tif (this.isPlaying) {\n            App.instance.alertDialog.showMsg(\"Bạn đang chơi không thể thoát.\");\n            return;\n        }\n        // NetworkClient.getInstance().close();\n        cc.audioEngine.stopAll();\n        App.instance.loadScene(\"Lobby\");\n    }\n\tactLogin(): void {\n           let username = Configs.Login.Username;\n            let password = Configs.Login.Password;\n\n            App.instance.showLoading(true);\n            Http.get(Configs.App.API, { c: 3, un: username, pw: md5(password) }, (err, res) => {\n                App.instance.showLoading(false);\n                if (err != null) {\n                    App.instance.alertDialog.showMsg(\"Đăng nhập không thành công, vui lòng kiểm tra lại kết nối.\");\n                    return;\n                }\n                // console.log(res);\n                switch (parseInt(res[\"errorCode\"])) {\n                    case 0:\n                     //    console.log(\"Đăng nhập thành công.\");\n                        Configs.Login.AccessToken = res[\"accessToken\"];\n                        Configs.Login.SessionKey = res[\"sessionKey\"];\n                        Configs.Login.Username = username;\n                        Configs.Login.Password = password;\n                        Configs.Login.IsLogin = true;\n                        var userInfo = JSON.parse(base64.decode(Configs.Login.SessionKey));\n                        Configs.Login.Nickname = userInfo[\"nickname\"];\n                        Configs.Login.Avatar = userInfo[\"avatar\"];\n                        Configs.Login.Coin = userInfo[\"vinTotal\"];\n                        Configs.Login.LuckyWheel = userInfo[\"luckyRotate\"];\n                        Configs.Login.IpAddress = userInfo[\"ipAddress\"];\n                        Configs.Login.CreateTime = userInfo[\"createTime\"];\n                        Configs.Login.Birthday = userInfo[\"birthday\"];\n                        Configs.Login.Birthday = userInfo[\"birthday\"];\n                        Configs.Login.VipPoint = userInfo[\"vippoint\"];\n                        Configs.Login.VipPointSave = userInfo[\"vippointSave\"];\n\n                        // MiniGameNetworkClient.getInstance().checkConnect();\n                    //    MiniGameNetworkClient.getInstance().sendCheck(new cmd.ReqSubcribeJackpots());\n                    //    SlotNetworkClient.getInstance().sendCheck(new cmd.ReqSubcribeHallSlot());\n                    //    ShootFishNetworkClient.getInstance().checkConnect(() => {\n                    //        BroadcastReceiver.send(BroadcastReceiver.USER_UPDATE_COIN);\n                    //    });\n\n                   //     this.panelNotLogin.active = false;\n                    //    this.panelLogined.active = true;\n\n                        SPUtils.setUserName(Configs.Login.Username);\n                        SPUtils.setUserPass(Configs.Login.Password);\n\n                        App.instance.buttonMiniGame.show();\n                   //     this.getMailNotRead();\n\n                        BroadcastReceiver.send(BroadcastReceiver.USER_INFO_UPDATED);\n\n                        /* switch (VersionConfig.CPName) {\n                            default:\n                                this.popupBoomTan.show();\n                                break;\n                        } */\n                        break;\n                    case 1007:\n                        App.instance.alertDialog.showMsg(\"Thông tin đăng nhập không hợp lệ.\");\n                        break;\n                    case 2001:\n                        this.popupUpdateNickname.show2(username, password);\n                        break;\n                    default:\n                        App.instance.alertDialog.showMsg(\"Đăng nhập không thành công vui lòng thử lại sau.\");\n                        break;\n                }\n            });\n        }\n    dismiss() {\n        if (this.isPlaying) {\n            App.instance.alertDialog.showMsg(\"Bạn đang chơi không thể thoát.\");\n            return;\n        }\n        super.dismiss();\n        for (let i = 0; i < this.popups.length; i++) {\n            this.popups[i].active = false;\n        }\n    }\n\n    private resetView() {\n        this.lblBet.string = \"CHỌN CƯỢC\";\n\n        this.panelSelectBet.active = true;\n        this.panelPlaying.active = false;\n        this.panelResult.active = false;\n        this.players.active = false;\n        this.panelSearchingMatch.active = false;\n\n        this.mePlayer.active = true;\n        this.mePlayer.getChildByName(\"sprAvatar\").getComponent(cc.Sprite).spriteFrame = App.instance.getAvatarSpriteFrame(Configs.Login.Avatar);\n\n        this.otherPlayer.active = false;\n        this.otherPlayer.getChildByName(\"lblNickname\").getComponent(cc.Label).string = \"\";\n        this.interactableBtnBets(true);\n    }\n\n    public playNow() {\n        this.selectBet(0);\n    }\n\n    private selectBet(betValue: number) {\n        this.interactableBtnBets(false);\n        this.isPlaying = true;\n    //    console.log(\"betValue: \" + betValue);\n        ShootFishNetworkClient.getInstance().request(\"OTT1\", {\n            \"userId\": Configs.Login.UserIdFish,\n            \"nickname\": Configs.Login.Nickname,\n            \"blind\": betValue\n        }, (res) => {\n            if (res[\"code\"] != 200) {\n                switch (res[\"code\"]) {\n                    case 302:\n                        App.instance.alertDialog.showMsg(\"Số dư không đủ.\");\n                        break;\n                    default:\n                        App.instance.alertDialog.showMsg(\"Lỗi \" + res[\"code\"] + \", không xác định.\");\n                        break;\n                }\n                this.interactableBtnBets(true);\n                this.isPlaying = false;\n                return;\n            }\n            this.lastBetValue = betValue;\n\n            if (betValue <= 0) {\n                this.lblBet.string = \"CƯỢC: __\";\n            } else {\n                let value = Math.floor(betValue / 1000);\n                this.lblBet.string = \"CƯỢC: \" + Utils.formatNumber(value) + \"K\";\n            }\n\n            this.panelSelectBet.active = false;\n            this.panelSearchingMatch.active = true;\n            this.players.active = true;\n\n            this.lblSearching.string = \"ĐANG TÌM KIẾM ĐỐI THỦ...\";\n            this.btnCancel.node.active = true;\n        }, this);\n    }\n\n    ///selectValue: 0: kéo, 1: bao, 2: búa\n    private play(selectValue: number) {\n        ShootFishNetworkClient.getInstance().request(\"OTT2\", {\n            \"userId\": Configs.Login.UserIdFish,\n            \"choice\": selectValue\n        }, (res) => {\n       //     console.log(res);\n            if (res[\"code\"] != 200) {\n                App.instance.alertDialog.showMsg(\"Lỗi \" + res[\"code\"] + \", không xác định.\");\n                this.interactableBtnBets(true);\n                return;\n            }\n            for (let i = 0; i < this.btnPlays.length; i++) {\n                this.btnPlays[i].interactable = false;\n                this.btnPlays[i].getComponent(cc.Sprite).spriteFrame = i == selectValue ? this.sprPlaysActive[i] : this.sprPlaysNormal[i];\n            }\n        }, this);\n    }\n\n    private interactableBtnBets(enabled: boolean) {\n        for (let i = 0; i < this.btnBets.length; i++) {\n            this.btnBets[i].interactable = enabled;\n        }\n        this.btnPlayNow.interactable = enabled;\n    }\n\n    public actCancel() {\n        ShootFishNetworkClient.getInstance().request(\"OTT11\", {\n        }, (res) => {\n            if (res[\"code\"] != 200) {\n                App.instance.alertDialog.showMsg(\"Lỗi \" + res[\"code\"] + \", không xác định.\");\n                return;\n            }\n            this.resetView();\n            this.isPlaying = false;\n        }, this);\n    }\n}\n"]}