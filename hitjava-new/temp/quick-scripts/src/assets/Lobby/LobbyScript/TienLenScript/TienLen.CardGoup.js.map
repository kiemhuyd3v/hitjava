{"version":3,"sources":["assets\\Lobby\\LobbyScript\\TienLenScript\\TienLen.CardGoup.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Utils from \"../Script/common/Utils\";\n\nconst TypeOfTurn = {\n\tMOT_LA: 1,\n\tMOT_DOI: 2,\n\tHAI_DOI_THONG: 12,\n\tSAM_CO: 3,\n\tSANH: 4,\n\tTU_QUY: 5,\n\tHAI_TU_QUY: 25,\n\tBA_DOI_THONG: 6,\n\tBON_DOI_THONG: 7,\n\tNAM_DOI_THONG: 8,\n\tSAU_DOI_THUONG: 9,\n\tSAU_DOI_THONG: 10,\n\tSANH_RONG: 11\n}\nclass CardGroup {\n\n\tcards = null;\n\tcardsBySuits = null;\n\n\tconstructor(cards) {\n\t\tthis.cards = CardGroup.sortCards(cards);\n\t\tthis.cardsBySuits = new Map<number, Array<any>>();\n\t\tvar _cardsBySuits = this.cardsBySuits;\n\t\tcards.forEach(function (value, i) {\n\t\t\tif (_cardsBySuits.get(value.card) === undefined)\n\t\t\t\t_cardsBySuits.set(value.card, [value]);\n\t\t\telse {\n\t\t\t\tvar currCards = _cardsBySuits.get(value.card);\n\t\t\t\tcurrCards.push(value);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetOrderedBySuit() {\n\t\tvar newMap = new Map<number, Array<any>>(this.cardsBySuits);\n\t\tvar orderedCards = [];\n\t\t//tu quy\n\t\tfor (var [key, value] of newMap)\n\t\t\tif (value.length == 4) {\n\t\t\t\torderedCards = orderedCards.concat(value);\n\t\t\t\tnewMap.delete(key);\n\t\t\t}\n\t\t//3 doi thong\n\t\tfor (var [key, value] of newMap)\n\t\t\tif (value.length >= 2) {\n\t\t\t\tvar _key = CardGroup.getNextKey(key);\n\t\t\t\tif (newMap.get(_key) && newMap.get(_key).length >= 2) {\n\t\t\t\t\tvar __key = CardGroup.getNextKey(_key);\n\t\t\t\t\tif (newMap.get(__key) && newMap.get(__key).length >= 2) {\n\t\t\t\t\t\torderedCards = orderedCards.concat([value.shift(), value.shift()]);\n\t\t\t\t\t\tif (value.length <= 0)\n\t\t\t\t\t\t\tnewMap.delete(key);\n\t\t\t\t\t\tvar _value = newMap.get(_key);\n\t\t\t\t\t\torderedCards = orderedCards.concat([_value.shift(), _value.shift()]);\n\t\t\t\t\t\tif (_value.length <= 0)\n\t\t\t\t\t\t\tnewMap.delete(_key);\n\t\t\t\t\t\tvar __value = newMap.get(__key);\n\t\t\t\t\t\torderedCards = orderedCards.concat([__value.shift(), __value.shift()]);\n\t\t\t\t\t\tif (__value.length <= 0)\n\t\t\t\t\t\t\tnewMap.delete(__key);\n\t\t\t\t\t\tvar ___key = CardGroup.getNextKey(__key);\n\t\t\t\t\t\tif (newMap.get(___key) && newMap.get(___key).length >= 2) {\n\t\t\t\t\t\t\t// 4 doi thong\n\t\t\t\t\t\t\tvar ___value = newMap.get(___key);\n\t\t\t\t\t\t\torderedCards = orderedCards.concat([___value.shift(), ___value.shift()]);\n\t\t\t\t\t\t\tif (___value.length <= 0)\n\t\t\t\t\t\t\t\tnewMap.delete(___key);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\tfor (var [key, value] of newMap)\n\t\t\tif (value.length == 3) {\n\t\t\t\torderedCards = orderedCards.concat(value);\n\t\t\t\tnewMap.delete(key);\n\t\t\t}\n\t\tdo {\n\t\t\tvar sequenceSuites = CardGroup.getFirstSequenceSuit([...newMap.keys()], 3);\n\t\t\tif (sequenceSuites) {\n\t\t\t\tsequenceSuites.forEach(function (_value, i) {\n\t\t\t\t\torderedCards = orderedCards.concat([newMap.get(_value).shift()]);\n\t\t\t\t\tif (newMap.get(_value).length <= 0)\n\t\t\t\t\t\tnewMap.delete(_value);\n\t\t\t\t});\n\t\t\t}\n\t\t} while (sequenceSuites)\n\t\tfor (var [key, value] of newMap)\n\t\t\tif (value.length == 2) {\n\t\t\t\torderedCards = orderedCards.concat(value);\n\t\t\t\tnewMap.delete(key);\n\t\t\t}\n\t\tfor (var [key, value] of newMap) {\n\t\t\torderedCards = orderedCards.concat(value);\n\t\t\tnewMap.delete(key);\n\t\t}\n\t\treturn orderedCards;\n\t}\n\n\tgetCardType() {\n\t\tvar newMap = new Map<number, Array<any>>(this.cardsBySuits);\n\t\tvar mapSize = newMap.size;\n\t\tvar keys = [...newMap.keys()];\n\t\tswitch (mapSize) {\n\t\t\tcase 1:\n\t\t\t\tif (newMap.get(keys[0]).length == 1) return TypeOfTurn.MOT_LA;\n\t\t\t\telse if (newMap.get(keys[0]).length == 2) return TypeOfTurn.MOT_DOI;\n\t\t\t\telse if (newMap.get(keys[0]).length == 3) return TypeOfTurn.SAM_CO;\n\t\t\t\telse return TypeOfTurn.TU_QUY;\n\t\t\t// break;\n\t\t\tcase 2:\n\t\t\t\treturn TypeOfTurn.HAI_TU_QUY;\n\t\t\t// break;\n\t\t\tcase 3:\n\t\t\t\tif (newMap.get(keys[0]).length == 1) return TypeOfTurn.SANH;\n\t\t\t\telse return TypeOfTurn.BA_DOI_THONG;\n\t\t\t// break;\n\t\t\tcase 4:\n\t\t\t\tif (newMap.get(keys[0]).length == 1) return TypeOfTurn.SANH;\n\t\t\t\telse return TypeOfTurn.BON_DOI_THONG;\n\t\t\t// break;\n\t\t\tdefault:\n\t\t\t\treturn TypeOfTurn.SANH\n\t\t\t// break;\n\t\t}\n\t}\n\n\tgetSuitableCards(submitCards) {\n\t\tvar submitCardGroup = new CardGroup(submitCards);\n\t\tvar submitCardType = submitCardGroup.getCardType();\n\t\tvar maxSubmitCard = CardGroup.getMaxCardOfCards(submitCards);\n\t\tvar newMap = new Map<number, Array<any>>(this.cardsBySuits);\n\t\tswitch (submitCardType) {\n\t\t\tcase TypeOfTurn.MOT_LA:\n\t\t\t\tfor (var i = 0; i < this.cards.length; i++) {\n\t\t\t\t\tif (CardGroup.point(this.cards[i]) > CardGroup.point(maxSubmitCard))\n\t\t\t\t\t\treturn [this.cards[i]];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase TypeOfTurn.MOT_DOI:\n\t\t\t\tfor (var [key, value] of newMap) {\n\t\t\t\t\tif (value.length == 1) continue;\n\t\t\t\t\tif (value.length >= 2) {\n\t\t\t\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\t\t\t\tif (CardGroup.point(value[i]) > CardGroup.point(maxSubmitCard))\n\t\t\t\t\t\t\t\treturn [value.shift(), value.shift()];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase TypeOfTurn.SAM_CO:\n\t\t\t\tfor (var [key, value] of newMap) {\n\t\t\t\t\tif (value.length < 3) continue;\n\t\t\t\t\tif (key > maxSubmitCard.card)\n\t\t\t\t\t\treturn [value.shift(), value.shift(), value.shift()];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase TypeOfTurn.TU_QUY:\n\t\t\t\tfor (var [key, value] of newMap) {\n\t\t\t\t\tif (value.length < 4) continue;\n\t\t\t\t\tif (key > maxSubmitCard.card)\n\t\t\t\t\t\treturn [value];\n\t\t\t\t}\n\t\t\t\tfor (var [key, value] of newMap)\n\t\t\t\t\tif (value.length >= 2) {\n\t\t\t\t\t\tvar _key = CardGroup.getNextKey(key);\n\t\t\t\t\t\tif (newMap.get(_key) && newMap.get(_key).length >= 2) {\n\t\t\t\t\t\t\tvar __key = CardGroup.getNextKey(_key);\n\t\t\t\t\t\t\tif (newMap.get(__key) && newMap.get(__key).length >= 2) {\n\t\t\t\t\t\t\t\tvar ___key = CardGroup.getNextKey(__key);\n\t\t\t\t\t\t\t\tif (newMap.get(___key) && newMap.get(___key).length >= 2) {\n\t\t\t\t\t\t\t\t\t// 4 doi thong\n\t\t\t\t\t\t\t\t\tvar orderedCards = [value.shift(), value.shift()];\n\t\t\t\t\t\t\t\t\tvar _value = newMap.get(_key);\n\t\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([_value.shift(), _value.shift()]);\n\t\t\t\t\t\t\t\t\tvar __value = newMap.get(__key);\n\t\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([__value.shift(), __value.shift()]);\n\t\t\t\t\t\t\t\t\tvar ___value = newMap.get(___key);\n\t\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([___value.shift(), ___value.shift()]);\n\t\t\t\t\t\t\t\t\treturn orderedCards;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase TypeOfTurn.HAI_TU_QUY:\n\n\t\t\t\tbreak;\n\t\t\tcase TypeOfTurn.BA_DOI_THONG:\n\t\t\t\tfor (var [key, value] of newMap) {\n\t\t\t\t\tif (value.length < 4) continue;\n\t\t\t\t\treturn [value];\n\t\t\t\t}\n\t\t\t\tfor (var [key, value] of newMap)\n\t\t\t\t\tif (value.length >= 2) {\n\t\t\t\t\t\tvar _key = CardGroup.getNextKey(key);\n\t\t\t\t\t\tif (newMap.get(_key) && newMap.get(_key).length >= 2) {\n\t\t\t\t\t\t\tvar __key = CardGroup.getNextKey(_key);\n\t\t\t\t\t\t\tif (newMap.get(__key) && newMap.get(__key).length >= 2) {\n\t\t\t\t\t\t\t\tvar orderedCards = [value.shift(), value.shift()];\n\t\t\t\t\t\t\t\tvar _value = newMap.get(_key);\n\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([_value.shift(), _value.shift()]);\n\t\t\t\t\t\t\t\tvar __value = newMap.get(__key);\n\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([__value.shift(), __value.shift()]);\n\t\t\t\t\t\t\t\tvar maxCard = CardGroup.getMaxCardOfCards(orderedCards);\n\t\t\t\t\t\t\t\tif (CardGroup.point(maxCard) > CardGroup.point(maxSubmitCard))\n\t\t\t\t\t\t\t\t\treturn orderedCards;\n\t\t\t\t\t\t\t\tvar ___key = CardGroup.getNextKey(__key);\n\t\t\t\t\t\t\t\tif (newMap.get(___key) && newMap.get(___key).length >= 2) {\n\t\t\t\t\t\t\t\t\t// 4 doi thong\n\n\t\t\t\t\t\t\t\t\tvar ___value = newMap.get(___key);\n\t\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([___value.shift(), ___value.shift()]);\n\t\t\t\t\t\t\t\t\treturn orderedCards;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase TypeOfTurn.BON_DOI_THONG:\n\t\t\t\tfor (var [key, value] of newMap)\n\t\t\t\t\tif (value.length >= 2) {\n\t\t\t\t\t\tvar _key = CardGroup.getNextKey(key);\n\t\t\t\t\t\tif (newMap.get(_key) && newMap.get(_key).length >= 2) {\n\t\t\t\t\t\t\tvar __key = CardGroup.getNextKey(_key);\n\t\t\t\t\t\t\tif (newMap.get(__key) && newMap.get(__key).length >= 2) {\n\t\t\t\t\t\t\t\tvar ___key = CardGroup.getNextKey(__key);\n\t\t\t\t\t\t\t\tif (newMap.get(___key) && newMap.get(___key).length >= 2) {\n\t\t\t\t\t\t\t\t\t// 4 doi thong\n\t\t\t\t\t\t\t\t\tvar orderedCards = [value.shift(), value.shift()];\n\t\t\t\t\t\t\t\t\tvar _value = newMap.get(_key);\n\t\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([_value.shift(), _value.shift()]);\n\t\t\t\t\t\t\t\t\tvar __value = newMap.get(__key);\n\t\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([__value.shift(), __value.shift()]);\n\t\t\t\t\t\t\t\t\tvar ___value = newMap.get(___key);\n\t\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([___value.shift(), ___value.shift()]);\n\t\t\t\t\t\t\t\t\tvar maxCard = CardGroup.getMaxCardOfCards(orderedCards);\n\t\t\t\t\t\t\t\t\tif (CardGroup.point(maxCard) > CardGroup.point(maxSubmitCard))\n\t\t\t\t\t\t\t\t\t\treturn orderedCards;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase TypeOfTurn.SANH:\n\t\t\t\tvar count = submitCards.length;\n\t\t\t\treturn this.getSequenceSuitBySize(newMap, count, maxSubmitCard);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetSuggestionNoCards(listSelected, data, isCheck = false) {\n\t\tlet listSuggestion;\n\t\tif (!isCheck) {\n\t\t\tlistSuggestion = this.get_BON_DOI_THONG([], listSelected);\n\t\t\tif (listSuggestion.length > 0) {\n\t\t\t\treturn listSuggestion;\n\t\t\t}\n\t\t\tlistSuggestion = this.get_BA_DOI_THONG([], listSelected);\n\t\t\tif (listSuggestion.length > 0) {\n\t\t\t\treturn listSuggestion;\n\t\t\t}\n\t\t\tlistSuggestion = this.get_TU_QUY([], listSelected);\n\t\t\tif (listSuggestion.length > 0) {\n\t\t\t\treturn listSuggestion;\n\t\t\t}\n\t\t\tlistSuggestion = this.getSequenceSuitBySize([], data, listSelected);\n\t\t\tif (listSuggestion.length > 0) {\n\t\t\t\treturn listSuggestion;\n\t\t\t}\n\t\t\tlistSuggestion = this.get_SAM_CO([], listSelected);\n\t\t\tif (listSuggestion.length > 0) {\n\t\t\t\treturn listSuggestion;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlistSuggestion = this.get_TU_QUY([], listSelected);\n\t\t\tif (listSuggestion.length > 0) {\n\t\t\t\treturn listSuggestion;\n\t\t\t}\n\t\t\tlistSuggestion = this.get_BON_DOI_THONG([], listSelected);\n\t\t\tif (listSuggestion.length > 0) {\n\t\t\t\treturn listSuggestion;\n\t\t\t}\n\t\t\tlistSuggestion = this.get_BA_DOI_THONG([], listSelected);\n\t\t\tif (listSuggestion.length > 0) {\n\t\t\t\treturn listSuggestion;\n\t\t\t}\n\t\t}\n\n\t\tif (listSuggestion.length > 0) {\n\t\t\treturn listSuggestion;\n\t\t}\n\t\treturn null;\n\t}\n\tgetSuggestionCards(submitCards, data, callback) {\n\t\tvar submitCardGroup = new CardGroup(submitCards);\n\t\tvar submitCardType = submitCardGroup.getCardType();\n\t\t //Utils.Log(\"submitCards=\",submitCards);\n\t\t //Utils.Log(\"Submit card type=\" + submitCardType);\n\t\tvar maxSubmitCard = CardGroup.getMaxCardOfCards(submitCards);\n\t\tvar newMap = new Map<number, Array<any>>(this.cardsBySuits);\n\t\tlet listSuggestion = new Array();\n\t\tswitch (submitCardType) {\n\t\t\tcase TypeOfTurn.MOT_LA:\n\t\t\t\tif (submitCards[0].card != 2) {\n\t\t\t\t\tfor (var i = 0; i < this.cards.length; i++) {\n\t\t\t\t\t\tif (CardGroup.point(this.cards[i]) > CardGroup.point(maxSubmitCard))\n\t\t\t\t\t\t\tlistSuggestion.push([this.cards[i]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase TypeOfTurn.MOT_DOI:\n\t\t\t\tfor (var [key, value] of newMap) {\n\t\t\t\t\tif (value.length == 1) continue;\n\t\t\t\t\tif (value.length >= 2) {\n\t\t\t\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\t\t\t\tif (CardGroup.point(value[i]) > CardGroup.point(maxSubmitCard))\n\t\t\t\t\t\t\t\tlistSuggestion.push([value.shift(), value.shift()]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase TypeOfTurn.SAM_CO:\n\t\t\t\tfor (var [key, value] of newMap) {\n\t\t\t\t\tif (value.length < 3) continue;\n\t\t\t\t\tif (key > maxSubmitCard.card)\n\t\t\t\t\t\tlistSuggestion.push([value.shift(), value.shift(), value.shift()]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase TypeOfTurn.TU_QUY:\n\t\t\t\tlistSuggestion = this.get_BON_DOI_THONG(submitCards);\n\t\t\t\tif (listSuggestion.length > 0)\n\t\t\t\t\treturn listSuggestion;\n\t\t\t\tlistSuggestion = this.get_TU_QUY(submitCards);\n\t\t\t\tbreak;\n\t\t\tcase TypeOfTurn.HAI_TU_QUY:\n\t\t\t\tlistSuggestion = this.get_TU_QUY(submitCards);\n\t\t\t\tbreak;\n\t\t\tcase TypeOfTurn.BA_DOI_THONG:\n\t\t\t\tlistSuggestion = this.get_BON_DOI_THONG(submitCards);\n\t\t\t\tif (listSuggestion.length > 0)\n\t\t\t\t\treturn listSuggestion;\n\t\t\t\tlistSuggestion = this.get_TU_QUY(submitCards);\n\t\t\t\tif (listSuggestion.length > 0)\n\t\t\t\t\treturn listSuggestion;\n\t\t\t\tlistSuggestion = this.get_BA_DOI_THONG(submitCards);\n\t\t\t\tbreak;\n\t\t\tcase TypeOfTurn.BON_DOI_THONG:\n\t\t\t\tfor (var [key, value] of newMap)\n\t\t\t\t\tif (value.length >= 2) {\n\t\t\t\t\t\tvar _key = CardGroup.getNextKey(key);\n\t\t\t\t\t\tif (newMap.get(_key) && newMap.get(_key).length >= 2) {\n\t\t\t\t\t\t\tvar __key = CardGroup.getNextKey(_key);\n\t\t\t\t\t\t\tif (newMap.get(__key) && newMap.get(__key).length >= 2) {\n\t\t\t\t\t\t\t\tvar ___key = CardGroup.getNextKey(__key);\n\t\t\t\t\t\t\t\tif (newMap.get(___key) && newMap.get(___key).length >= 2) {\n\t\t\t\t\t\t\t\t\t// 4 doi thong\n\t\t\t\t\t\t\t\t\tvar orderedCards = [value.shift(), value.shift()];\n\t\t\t\t\t\t\t\t\tvar _value = newMap.get(_key);\n\t\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([_value.shift(), _value.shift()]);\n\t\t\t\t\t\t\t\t\tvar __value = newMap.get(__key);\n\t\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([__value.shift(), __value.shift()]);\n\t\t\t\t\t\t\t\t\tvar ___value = newMap.get(___key);\n\t\t\t\t\t\t\t\t\torderedCards = orderedCards.concat([___value.shift(), ___value.shift()]);\n\t\t\t\t\t\t\t\t\tvar maxCard = CardGroup.getMaxCardOfCards(orderedCards);\n\t\t\t\t\t\t\t\t\tif (CardGroup.point(maxCard) > CardGroup.point(maxSubmitCard))\n\t\t\t\t\t\t\t\t\t\tlistSuggestion.push(orderedCards);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase TypeOfTurn.SANH:\n\t\t\t\tlistSuggestion = this.getSequenceSuitBySize(submitCards, data);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tif (listSuggestion.length > 0) {\n\t\t\treturn listSuggestion;\n\t\t}\n\t\telse\n\t\t\treturn null;\n\t}\n\n\tgetSequenceSuitBySize(submitCards, data, listSelected = null) {\n\t\tif (submitCards.length > 0) {\n\t\t\tlet listCard = new Array();\n\t\t\tfor (var [key, value] of new Map(this.cardsBySuits)) {\n\t\t\t\tlistCard.push({ card: key, value: value });\n\t\t\t}\n\t\t\tlet listTmp = new Array();\n\t\t\tlet listSg = new Array();\n\t\t\tlistCard.sort((a, b) => { return (a.card == 1 ? 14 : a.card) - (b.card == 1 ? 14 : b.card) });// sx tang dan;\n\t\t\tfor (let i = 0; i < listCard.length; i++) {\n\t\t\t\tif ((listCard[i].card == 1 ? 14 : listCard[i].card) >= submitCards[0].card) {\n\t\t\t\t\tif (i + 1 < listCard.length && (listCard[i].card == 1 ? 14 : listCard[i].card) == (listCard[i + 1].card == 1 ? 14 : listCard[i + 1].card) - 1)\n\t\t\t\t\t\tlistTmp.push(listCard[i]);\n\t\t\t\t\telse {\n\t\t\t\t\t\tlistTmp.push(listCard[i]);\n\t\t\t\t\t\tif (listTmp.length >= submitCards.length) {\n\t\t\t\t\t\t\tlet index = listTmp.findIndex(e => (e.value.findIndex(e2 => (e2.card == data.card && e2.face == data.face)) >= 0));\n\t\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\t\tfor (let i = 0; i <= listTmp.length - submitCards.length; i++) {\n\t\t\t\t\t\t\t\t\tlet tmp = new Array();\n\t\t\t\t\t\t\t\t\tfor (let j = i; j < i + submitCards.length; j++)\n\t\t\t\t\t\t\t\t\t\tif (listTmp[j].card == data.card)\n\t\t\t\t\t\t\t\t\t\t\ttmp.push(data);\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\ttmp.push(listTmp[j].value[0]);\n\t\t\t\t\t\t\t\t\tlistSg.push(tmp);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlistTmp = new Array();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn listSg;\n\t\t}\n\t\telse if (listSelected != null) {\n\t\t\tif (listSelected.length >= 2) {\n\t\t\t\tlet listCard = new Array();\n\t\t\t\tfor (var [key, value] of new Map(this.cardsBySuits)) {\n\t\t\t\t\tlistCard.push({ card: key, value: value });\n\t\t\t\t}\n\t\t\t\tlet listTmp = new Array();\n\t\t\t\tlet listSg = new Array();\n\t\t\t\tlistCard.sort((a, b) => { return (a.card == 1 ? 14 : a.card) - (b.card == 1 ? 14 : b.card) });// sx tang dan;\n\t\t\t\tfor (let i = 0; i < listCard.length; i++) {\n\t\t\t\t\tif ((listCard[i].card == 1 ? 14 : listCard[i].card) >= 3) {\n\t\t\t\t\t\tif (i + 1 < listCard.length && (listCard[i].card == 1 ? 14 : listCard[i].card) == (listCard[i + 1].card == 1 ? 14 : listCard[i + 1].card) - 1)\n\t\t\t\t\t\t\tlistTmp.push(listCard[i]);\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tlistTmp.push(listCard[i]);\n\t\t\t\t\t\t\tif (listTmp.length >= 3) {\n\t\t\t\t\t\t\t\tlet index = listTmp.findIndex(e => e.value.findIndex(e2 => (e2.card == data.card && e2.face == data.face)) >= 0);\n\t\t\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\t\t\tlet tmp = new Array();\n\t\t\t\t\t\t\t\t\tfor (let j = 0; j < listTmp.length; j++) {\n\t\t\t\t\t\t\t\t\t\tif (listTmp[j].card == data.card)\n\t\t\t\t\t\t\t\t\t\t\ttmp.push(data);\n\t\t\t\t\t\t\t\t\t\telse if (listSelected.findIndex(e => CardGroup.indexToCard(e.index).card == listTmp[j].card) >= 0) {\n\t\t\t\t\t\t\t\t\t\t\tvar _index = listSelected.findIndex(e => CardGroup.indexToCard(e.index).card == listTmp[j].card);\n\t\t\t\t\t\t\t\t\t\t\ttmp.push(CardGroup.indexToCard(listSelected[_index].index));\n\t\t\t\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\t\t\t\ttmp.push(listTmp[j].value[0]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (listSelected.filter(e => tmp.findIndex(e2 => (CardGroup.indexToCard(e.index).card == e2.card && CardGroup.indexToCard(e.index).face == e2.face)) >= 0).length >= 2) {\n\t\t\t\t\t\t\t\t\t\tlistSg.push(tmp);\n\t\t\t\t\t\t\t\t\t\treturn listSg;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlistTmp = new Array();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn listSg;\n\t\t\t}\n\t\t\telse\n\t\t\t\treturn [];\n\t\t}\n\t\treturn [];\n\t}\n\tget_BA_DOI_THONG(submitCards, listSelected = null) {\n\t\tif (submitCards.length > 0) {\n\t\t\tlet listCard = new Array();\n\t\t\tlet listTmp2 = new Array();\n\t\t\tlet listTmp = new Array();\n\t\t\tlet listSg = new Array();\n\t\t\tfor (var [key, value] of new Map(this.cardsBySuits)) {\n\t\t\t\tlistCard.push({ card: key, value: value });\n\t\t\t}\n\t\t\tfor (let i = 0; i < listCard.length; i++) {\n\t\t\t\tif (i + 1 < listCard.length\n\t\t\t\t\t&& CardGroup.cardRank(listCard[i].card) == CardGroup.cardRank(listCard[i + 1].card) - 1\n\t\t\t\t\t&& listCard[i].value.length >= 2 && listCard[i + 1].value.length >= 2) {\n\t\t\t\t\tlistTmp.push(listCard[i]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (listCard[i].value.length >= 2) {\n\t\t\t\t\t\tlistTmp.push(listCard[i]);\n\t\t\t\t\t}\n\t\t\t\t\tif (listTmp.length >= 3)\n\t\t\t\t\t\tlistTmp2.push(listTmp);\n\t\t\t\t\tlistTmp = new Array();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let i = 0; i < listTmp2.length; i++) {\n\t\t\t\tfor (let j = 0; j < listTmp2[i].length - 2; j++) {\n\t\t\t\t\tlet tmp = new Array();\n\t\t\t\t\tfor (let l = j; l < j + 3; l++) {\n\t\t\t\t\t\tfor (let k = 0; k < 2; k++)\n\t\t\t\t\t\t\ttmp.push(listTmp2[i][l].value[k]);\n\t\t\t\t\t}\n\t\t\t\t\tlistSg.push(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn listSg;\n\t\t}\n\t\telse {\n\t\t\tlet listSg = new Array();\n\t\t\tif (listSelected.length >= 2) {\n\t\t\t\tlet listCard = new Array();\n\t\t\t\tlet listTmp2 = new Array();\n\t\t\t\tlet listTmp = new Array();\n\n\t\t\t\tfor (var [key, value] of new Map(this.cardsBySuits)) {\n\t\t\t\t\tlistCard.push({ card: key, value: value });\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < listCard.length; i++) {\n\t\t\t\t\tif (i + 1 < listCard.length\n\t\t\t\t\t\t&& CardGroup.cardRank(listCard[i].card) == CardGroup.cardRank(listCard[i + 1].card) - 1\n\t\t\t\t\t\t&& listCard[i].value.length >= 2 && listCard[i + 1].value.length >= 2) {\n\t\t\t\t\t\tlistTmp.push(listCard[i]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (listCard[i].value.length >= 2) {\n\t\t\t\t\t\t\tlistTmp.push(listCard[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (listTmp.length >= 3)\n\t\t\t\t\t\t\tlistTmp2.push(listTmp);\n\t\t\t\t\t\tlistTmp = new Array();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < listTmp2.length; i++) {\n\t\t\t\t\tfor (let j = 0; j < listTmp2[i].length - 2; j++) {\n\t\t\t\t\t\tlet tmp = new Array();\n\t\t\t\t\t\tfor (let l = j; l < j + 3; l++) {\n\t\t\t\t\t\t\tfor (let k = 0; k < 2; k++)\n\t\t\t\t\t\t\t\ttmp.push(listTmp2[i][l].value[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (listSelected.filter(e => tmp.findIndex(e2 => (CardGroup.indexToCard(e.index).card == e2.card && CardGroup.indexToCard(e.index).face == e2.face)) >= 0).length >= 2) {\n\t\t\t\t\t\t\tlistSg.push(tmp);\n\t\t\t\t\t\t\treturn listSg;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn listSg;\n\t\t}\n\t}\n\tget_BON_DOI_THONG(submitCards, listSelected = null) {\n\t\tif (submitCards.length > 0) {\n\t\t\tlet listCard = new Array();\n\t\t\tlet listTmp2 = new Array();\n\t\t\tlet listTmp = new Array();\n\t\t\tlet listSg = new Array();\n\t\t\tfor (var [key, value] of new Map(this.cardsBySuits)) {\n\t\t\t\tlistCard.push({ card: key, value: value });\n\t\t\t}\n\t\t\tfor (let i = 0; i < listCard.length; i++) {\n\t\t\t\tif (i + 1 < listCard.length\n\t\t\t\t\t&& CardGroup.cardRank(listCard[i].card) == CardGroup.cardRank(listCard[i + 1].card) - 1\n\t\t\t\t\t&& listCard[i].value.length >= 2 && listCard[i + 1].value.length >= 2) {\n\t\t\t\t\tlistTmp.push(listCard[i]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (listCard[i].value.length >= 2) {\n\t\t\t\t\t\tlistTmp.push(listCard[i]);\n\t\t\t\t\t}\n\t\t\t\t\tif (listTmp.length >= 3)\n\t\t\t\t\t\tlistTmp2.push(listTmp);\n\t\t\t\t\tlistTmp = new Array();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let i = 0; i < listTmp2.length; i++) {\n\t\t\t\tfor (let j = 0; j < listTmp2[i].length - 3; j++) {\n\t\t\t\t\tlet tmp = new Array();\n\t\t\t\t\tfor (let l = j; l < j + 4; l++) {\n\t\t\t\t\t\tfor (let k = 0; k < 2; k++)\n\t\t\t\t\t\t\ttmp.push(listTmp2[i][l].value[k]);\n\t\t\t\t\t}\n\t\t\t\t\tlistSg.push(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn listSg;\n\t\t}\n\t\telse {\n\t\t\tlet listSg = new Array();\n\t\t\tif (listSelected.length >= 2) {\n\t\t\t\tlet listCard = new Array();\n\t\t\t\tlet listTmp2 = new Array();\n\t\t\t\tlet listTmp = new Array();\n\t\t\t\tfor (var [key, value] of new Map(this.cardsBySuits)) {\n\t\t\t\t\tlistCard.push({ card: key, value: value });\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < listCard.length; i++) {\n\t\t\t\t\tif (i + 1 < listCard.length\n\t\t\t\t\t\t&& CardGroup.cardRank(listCard[i].card) == CardGroup.cardRank(listCard[i + 1].card) - 1\n\t\t\t\t\t\t&& listCard[i].value.length >= 2 && listCard[i + 1].value.length >= 2) {\n\t\t\t\t\t\tlistTmp.push(listCard[i]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (listCard[i].value.length >= 2) {\n\t\t\t\t\t\t\tlistTmp.push(listCard[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (listTmp.length >= 3)\n\t\t\t\t\t\t\tlistTmp2.push(listTmp);\n\t\t\t\t\t\tlistTmp = new Array();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < listTmp2.length; i++) {\n\t\t\t\t\tfor (let j = 0; j < listTmp2[i].length - 3; j++) {\n\t\t\t\t\t\tlet tmp = new Array();\n\t\t\t\t\t\tfor (let l = j; l < j + 4; l++) {\n\t\t\t\t\t\t\tfor (let k = 0; k < 2; k++)\n\t\t\t\t\t\t\t\ttmp.push(listTmp2[i][l].value[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (listSelected.filter(e => tmp.findIndex(e2 => (CardGroup.indexToCard(e.index).card == e2.card && CardGroup.indexToCard(e.index).face == e2.face)) >= 0).length >= 2) {\n\t\t\t\t\t\t\tlistSg.push(tmp);\n\t\t\t\t\t\t\treturn listSg;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn listSg;\n\t\t}\n\t}\n\tget_TU_QUY(submitCards, listSelected = null) {\n\t\tif (submitCards.length > 0) {\n\t\t\tlet listSg = new Array();\n\t\t\tfor (var [key, value] of new Map<number, Array<any>>(this.cardsBySuits)) {\n\t\t\t\tif (value.length == 4) {\n\t\t\t\t\tlistSg.push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn listSg;\n\t\t}\n\t\telse {\n\t\t\tlet listSg = new Array();\n\t\t\tif (listSelected.length >= 2) {\n\t\t\t\tfor (var [key, value] of new Map<number, Array<any>>(this.cardsBySuits)) {\n\t\t\t\t\tif (value.length == 4 && listSelected.filter(e => value.findIndex(e2 => (CardGroup.indexToCard(e.index).card == e2.card && CardGroup.indexToCard(e.index).face == e2.face)) >= 0).length >= 2) {\n\t\t\t\t\t\tlistSg.push(value);\n\t\t\t\t\t\treturn listSg;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn listSg;\n\t\t}\n\t}\n\tget_SAM_CO(submitCards, listSelected = null) {\n\t\tlet listSg = new Array();\n\t\tif (listSelected.length >= 2) {\n\n\t\t\tfor (var [key, value] of new Map<number, Array<any>>(this.cardsBySuits)) {\n\t\t\t\tlet tmp = new Array();\n\t\t\t\tif (value.length < 3) continue;\n\t\t\t\tif (key > 2) {\n\t\t\t\t\ttmp = [value.shift(), value.shift(), value.shift()];\n\t\t\t\t\tif (listSelected.filter(e => tmp.findIndex(e2 => (CardGroup.indexToCard(e.index).card == e2.card && CardGroup.indexToCard(e.index).face == e2.face)) >= 0).length >= 2) {\n\t\t\t\t\t\tlistSg.push(tmp);\n\t\t\t\t\t}\n\t\t\t\t\treturn listSg;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\treturn listSg;\n\t}\n\n\tstatic getMaxCardOfCards(cards) {\n\t\treturn CardGroup.sortCards(cards)[cards.length - 1];\n\t}\n\n\tstatic getNextKey(key) {\n\t\treturn key == 13 ? 1 : key + 1;\n\t}\n\n\tstatic subCards(cards, subCards) {\n\t\treturn cards.filter(function (value) {\n\t\t\tvar found = false;\n\t\t\tsubCards.forEach(function (_value, i) {\n\t\t\t\tif (value.card == _value.card\n\t\t\t\t\t&& value.face == _value.face) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn !found;\n\t\t});\n\t}\n\tstatic sortSuits(suits) {\n\t\tsuits.sort(function (a, b) {\n\t\t\treturn (a + 10) % 13 - (b + 10) % 13;\n\t\t})\n\t}\n\tstatic sortCards(cards) {\n\t\treturn cards.sort(function (a, b) {\n\t\t\treturn CardGroup.point(a) - CardGroup.point(b);\n\t\t})\n\t}\n\n\tstatic point(card) {\n\t\treturn (card.card + 10) % 13 * 4 + card.face;\n\t}\n\n\tstatic getFirstSequenceSuit(suits, minCount) {\n\t\tif (!suits)\n\t\t\treturn null;\n\t\tif (minCount <= 1 || minCount > suits.length)\n\t\t\treturn null;\n\t\tvar _suits = [...suits];\n\t\tCardGroup.sortSuits(_suits);\n\t\tvar temp = [];\n\t\tdo {\n\t\t\tvar curr = _suits.shift()\n\t\t\tif (curr == 2)\n\t\t\t\tbreak;\n\t\t\tif (temp.length > 0\n\t\t\t\t&& ((curr != 1 && (curr - temp[temp.length - 1] > 1))\n\t\t\t\t\t|| curr == 1 && temp[temp.length - 1] != 13)) {\n\t\t\t\tif (temp.length >= minCount)\n\t\t\t\t\treturn temp;\n\t\t\t\ttemp = [];\n\t\t\t}\n\t\t\ttemp.push(curr);\n\t\t}\n\t\twhile (_suits.length != 0);\n\n\t\tif (temp.length >= minCount)\n\t\t\treturn temp;\n\t\treturn null;\n\t}\n\n\tstatic getFirstSequenceSuitBySize(map, count, maxCard) {\n\t\tif (!map)\n\t\t\treturn null;\n\t\tif (count <= 1 || count > map.length)\n\t\t\treturn null;\n\t\tvar _suits = [...map.keys()];\n\t\tCardGroup.sortSuits(_suits);\n\t\tvar temp = [];\n\t\tfor (var i = 0; i < _suits.length - 1; i++) {\n\t\t\tvar curr = _suits[i];\n\t\t\tvar next = _suits[i + 1];\n\t\t\tif (curr == 1) {\n\t\t\t\tvar listCards = map.get(curr);\n\t\t\t\tfor (let j = 0; j < listCards.length; j++) {\n\t\t\t\t\tif (CardGroup.point(listCards[j]) > CardGroup.point(maxCard)) {\n\t\t\t\t\t\ttemp.push(listCards[j]);\n\t\t\t\t\t\t// return temp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (curr < maxCard.card - count) {\n\t\t\t\tmap.delete(curr);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (curr == 2 || next == 2)\n\t\t\t\tbreak;\n\t\t\telse if (temp.length == count - 1) {\n\t\t\t\tvar listCards = map.get(curr);\n\t\t\t\tfor (let j = 0; j < listCards.length; j++) {\n\t\t\t\t\tif (CardGroup.point(listCards[j]) > CardGroup.point(maxCard)) {\n\t\t\t\t\t\ttemp.push(listCards[j]);\n\t\t\t\t\t\t// return temp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmap.delete(_suits.shift());\n\t\t\t\treturn CardGroup.getFirstSequenceSuitBySize(map, count, maxCard);\n\t\t\t}\n\t\t\telse if ((next - curr) == 1 || (next == 1 && curr == 13)) {\n\t\t\t\tvar listCards = map.get(curr);\n\t\t\t\ttemp.push(listCards[0]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmap.delete(_suits.shift());\n\t\t\t\ttemp.push(CardGroup.getFirstSequenceSuitBySize(map, count, maxCard));\n\t\t\t};\n\t\t}\n\t\tif (temp.length == count)\n\t\t\treturn temp;\n\t\treturn null;\n\t}\n\n\tstatic cardRank(card) {\n\t\treturn (card + 10) % 13;\n\t}\n\n\tstatic indexToCard(index) {\n\t\tvar face = index + 1;\n\t\twhile (face > 4)\n\t\t\tface -= 4;\n\t\tvar card = (index + 1 - face) / 4 + 3;\n\t\tif (card > 13) card -= 13;\n\t\treturn { card: card, face: face };\n\t}\n\n\tstatic indexsToCards(indexs) {\n\t\tvar cards = [];\n\t\tindexs.forEach(index => {\n\t\t\tcards.push(CardGroup.indexToCard(index));\n\t\t});\n\t\treturn cards;\n\t}\n\n\tstatic cardsToIndexs(cards) {\n\t\tvar indexs = [];\n\t\tcards.forEach(card => {\n\t\t\tindexs.push(CardGroup.cardToIndex(card));\n\t\t});\n\t\treturn indexs;\n\t}\n\n\tstatic cardToIndex(card) {\n\t\treturn (card.card + 10) % 13 * 4 + card.face - 1;\n\t}\n}\nexport default CardGroup;"]}