{"version":3,"sources":["assets\\Lobby\\LobbyScript\\NumberUpdater.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class NumberUpdater extends cc.Component {\n\n    @property(cc.Label)\n    label: cc.Label = null;\n    @property(cc.Integer)\n    public step = 0.01;\n    @property(cc.Integer)\n    private _currentNumber: number = 0;\n    public get currentNumber() {\n        return this._currentNumber;\n    }\n\n    public set currentNumber(value: number) {\n        this._currentNumber = value;\n        this.updateLabel();\n    }\n\n    public preprocessingMoney (money1:number | string) : string {\n        money1 = parseInt(money1 + '');\n        let money = Math.abs(money1) + '';\n        let string = this.preprocessingString(money);\n        if (money1 < 0) {\n            string = \"-\" + string;\n        }\n        return string;\n    }\n\n    public preprocessingString (money: string) {\n        if (money.length < 4) {\n            return money + \"\";\n        }\n        let string = \"\";\n        let count = 1;\n        for (let i = 0; i < money.length; i++) {\n            string = money[money.length - 1 - i] + string;\n            if (count % 3 === 0 && count !== money.length) {\n                string = \".\" + string;\n            }\n            count++;\n        }\n        return string;\n    }\n\n    /***\n     * @type function(str: string)=> string\n     */\n    private _formatFunc = this.preprocessingMoney;\n    set formatFunc(formatFunc: (str: string) => string) {\n        this._formatFunc = formatFunc;\n    }\n\n    protected onLoad(): void {\n        this.formatFunc = this.preprocessingString;\n    }\n\n    protected start(): void {\n        if (!this.label) {\n            this.label = this.getComponent(cc.Label);\n        }\n        // this.setNumber(20, 0.25);\n    }\n\n    public setNumber(number: number, time: number, stepTime?: number) {\n        if (time) {\n            this.unscheduleAllCallbacks();\n            if (this.currentNumber === number) {\n                return;\n            }\n            if (stepTime) {\n                this.step = stepTime;\n            }\n            let interval = this.step;\n            let repeat = Math.floor(time / this.step);\n            if (this.currentNumber > number) {\n                this.currentNumber = 0;\n            }\n            let distNumber = Math.ceil((number - this.currentNumber) / repeat);\n            if (distNumber <= 0) {\n                distNumber = 1;\n            }\n            this.schedule(function () {\n                this.currentNumber += distNumber;\n                if (this.currentNumber > number) {\n                    this.currentNumber = number;\n                    this.unscheduleAllCallbacks();\n                }\n            }.bind(this), interval, repeat, 0);\n        } else {\n            this.currentNumber = number;\n        }\n    }\n\n    updateLabel() {\n        if (cc.isValid(this.label)) {\n            if (this._formatFunc) {\n                this.label.string = '' + this._formatFunc(this.currentNumber + '');\n            } else {\n                this.label.string = '' + this.currentNumber;\n            }\n        } else {\n        //    cc.warn('this.label is not valid or null or undefined');\n        }\n    }\n\n    protected onDestroy(): void {\n        this.unscheduleAllCallbacks();\n    }\n}\n"]}