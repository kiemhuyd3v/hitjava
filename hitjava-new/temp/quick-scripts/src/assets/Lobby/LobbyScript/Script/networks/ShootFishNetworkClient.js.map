{"version":3,"sources":["assets\\Lobby\\LobbyScript\\Script\\networks\\ShootFishNetworkClient.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Configs from \"../../../../Loading/src/Configs\";\nimport App from \"../common/App\";\nimport Utils from \"../common/Utils\";\n\nconst { ccclass, property } = cc._decorator;\n\n\nclass NotifyListener {\n    target: cc.Component;\n    callback: (route: string, data: Object) => void;\n\n    constructor(target: cc.Component, callback: (route: string, data: Object) => void) {\n        this.target = target;\n        this.callback = callback;\n    }\n}\n\nclass RequestListener {\n    target: cc.Component;\n    callback: (res: Object) => void;\n\n    constructor(target: cc.Component, callback: (res: Object) => void) {\n        this.target = target;\n        this.callback = callback;\n    }\n}\n\nclass NetworkListener {\n    target: cc.Component;\n    callback: () => void;\n\n    constructor(target: cc.Component, callback: () => void) {\n        this.target = target;\n        this.callback = callback;\n    }\n}\n\n@ccclass\nexport default class ShootFishNetworkClient {\n    private static instance: ShootFishNetworkClient;\n    private static reqId = 0;\n    public static MIN_PING = -1;\n    public static PING = 0;\n    public static TIME_DISTANCE = 0;\n    private static NODE_FIXED = new cc.Node().addComponent(cc.Sprite);\n    public static serverCurrentTimeMillis(): number {\n        //c - s = d\n        //-s = d-c\n        //s = -(d-c)\n        //s = -d + c\n        //s = c - d\n        return Date.now() - this.TIME_DISTANCE + Math.round(ShootFishNetworkClient.MIN_PING / 2);\n    }\n    public static systemCurrentTimeMillis(): number {\n        return Date.now();\n    }\n\n    public isUseWSS: boolean = Configs.App.USE_WSS;\n    public isAutoReconnect: boolean = true;\n\n    private ws: WebSocket = null;\n    private host: string = Configs.App.HOST_SHOOT_FISH.host;\n    private port: number = Configs.App.HOST_SHOOT_FISH.port;\n    // private host: string = \"gamebaiyoyo.com\";\n    // private port: number = 2083;\n    private isForceClose = false;\n    private onOpenes: Array<NetworkListener> = [];\n    private onCloses: Array<NetworkListener> = [];\n    private xorKey = \"dmVyeSBzZWNyZXQ\";\n    private requests: Object = new Object();\n    private intervalPing: number = -1;\n\n    private listeners: Array<NotifyListener> = new Array<NotifyListener>();\n\n    private isLogining = false;\n    private isLogined = false;\n    private onLogined: (logined) => void = null;\n\n    public static getInstance(): ShootFishNetworkClient {\n        if (this.instance == null) {\n            this.instance = new ShootFishNetworkClient();\n        }\n        return this.instance;\n    }\n\n    public checkConnect(onLogined: (isLogined) => void) {\n        this.onLogined = onLogined;\n        if (!this.isConnected()) {\n            App.instance.showErrLoading(\"Đang kết nối tới server...\");\n            this.connect();\n        } else if (!this.isLogined) {\n            this.login();\n        } else {\n            this.onLogined(this.isLogined);\n        }\n    }\n\n    private login() {\n        if (this.isLogining) return;\n        this.isLogining = true;\n        App.instance.showErrLoading(\"Đang đăng nhập...\");\n        // this.request(\"quickLogin\", {\n        //     \"deviceId\": \"shoot123456654\" + Configs.Login.Nickname,\n        //     \"platform\": \"android\",\n        //     \"language\": \"vi\"\n        // }, (res) => {\n        this.request(\"xxenglogin\", {\n            \"username\": Configs.Login.Username,\n            \"password\": md5(Configs.Login.Password),\n            \"platform\": Configs.App.getPlatformName(),\n        }, (res) => {\n            this.isLogining = false;\n            App.instance.showLoading(false);\n        //    console.log(res);\n            if (!res[\"ok\"]) {\n                if (this.onLogined != null) this.onLogined(false);\n                return;\n            }\n        //    console.log(\"login oke\");\n\n            this.isLogined = true;\n            Configs.Login.CoinFish = res[\"cash\"];\n            Configs.Login.UsernameFish = res[\"username\"];\n            Configs.Login.PasswordFish = res[\"password\"];\n            Configs.Login.UserIdFish = res[\"userId\"];\n            Configs.Login.FishConfigs = res[\"config\"];\n\n            if (this.onLogined != null) this.onLogined(true);\n        }, ShootFishNetworkClient.NODE_FIXED);\n    }\n\n    constructor() {\n\n    }\n\n    private onOpen(ev: Event) {\n     //   console.log(\"onOpen\");\n        this.intervalPing = setInterval(() => this.ping(), 3000);\n        this.ping();\n\n        for (let i = 0; i < this.onOpenes.length; i++) {\n            let listener = this.onOpenes[i];\n            if (listener.target && listener.target instanceof Object && listener.target.node) {\n                listener.callback();\n            } else {\n                this.onOpenes.splice(i, 1);\n                i--;\n            }\n        }\n\n        if (this.onLogined != null) this.login();\n    }\n\n    private onMessage(ev: MessageEvent) {\n        let data = new Uint8Array(ev.data);\n        data = this.doXOR(data, 0, data.length);\n        let pack: Object = msgpack.decode(data);\n        if (pack.hasOwnProperty(\"msgId\")) {\n            if (pack[\"msgId\"] == 0) {\n                // console.log(pack);\n                for (let i = 0; i < this.listeners.length; i++) {\n                    let listener = this.listeners[i];\n                    if (listener.target && listener.target instanceof Object && listener.target.node) {\n                        listener.callback(pack[\"route\"], pack[\"data\"]);\n                    } else {\n                        this.listeners.splice(i, 1);\n                        i--;\n                    }\n                }\n            } else {\n                // console.log(pack);\n                if (this.requests.hasOwnProperty(pack[\"msgId\"])) {\n                    let listener: RequestListener = this.requests[pack[\"msgId\"]];\n                    if (listener.target && listener.target instanceof Object && listener.target.node) {\n                        listener.callback(pack[\"data\"]);\n                    }\n                    delete this.requests[pack[\"msgId\"]];\n                }\n            }\n        }\n    }\n\n    private onError(ev: Event) {\n        App.instance.showLoading(false);\n   //     console.log(\"onError\");\n    }\n\n    private onClose(ev: Event) {\n      //  console.log(\"onClose\");\n        if (this.intervalPing > 0) clearInterval(this.intervalPing);\n        for (var i = 0; i < this.onCloses.length; i++) {\n            var listener = this.onCloses[i];\n            if (listener.target && listener.target instanceof Object && listener.target.node) {\n                listener.callback();\n            } else {\n                this.onCloses.splice(i, 1);\n                i--;\n            }\n        }\n        if (this.isAutoReconnect && !this.isForceClose) {\n            setTimeout(() => {\n                if (!this.isForceClose) this.connect();\n            }, 2000);\n        }\n    }\n\n    private send(msg: any) {\n        if (!this.isConnected()) return;\n        let source = msgpack.encode(msg);\n        source = this.doXOR(source, 0, source.length);\n        this.ws.send(source);\n    }\n\n    private doXOR(source: Uint8Array, start: number, count: number) {\n        let index = 0;\n        let end = start + count;\n        for (let i = start; i < end; i++) {\n            source[i] = (source[i] ^ Number(this.xorKey.charAt(index % this.xorKey.length)));\n            index++;\n        }\n        return source;\n    }\n\n    public connect() {\n    //    console.log(\"start connect: \" + this.host + \":\" + this.port);\n        this.isForceClose = false;\n        if (this.ws == null) {\n            // this.ws = new WebSocket(\"wss://\" + host + \":\" + port + \"/websocket\");\n            if (this.isUseWSS) {\n                if (cc.sys.isNative && cc.sys.os == cc.sys.OS_ANDROID) {\n                    this.ws = new (Function.prototype.bind.apply(WebSocket, [null, \"wss://\" + this.host + \":\" + this.port, [], cc.url.raw(\"resources/raw/cacert.pem\")]));\n                } else {\n                    this.ws = new WebSocket(\"wss://\" + this.host + \":\" + this.port);\n                }\n            } else {\n                this.ws = new WebSocket(\"ws://\" + this.host + \":\" + this.port);\n            }\n            this.ws.binaryType = \"arraybuffer\";\n            this.ws.onopen = this.onOpen.bind(this);\n            this.ws.onmessage = this.onMessage.bind(this);\n            this.ws.onerror = this.onError.bind(this);\n            this.ws.onclose = this.onClose.bind(this);\n        } else {\n            if (this.ws.readyState !== WebSocket.OPEN) {\n                this.ws.close();\n                this.ws = null;\n                this.connect();\n            }\n        }\n    }\n\n    public addOnOpen(callback: () => void, target: cc.Component) {\n        this.onOpenes.push(new NetworkListener(target, callback));\n    }\n\n    public addOnClose(callback: () => void, target: cc.Component) {\n        this.onCloses.push(new NetworkListener(target, callback));\n    }\n\n    public close() {\n        this.isForceClose = true;\n        if (this.ws) {\n            this.ws.close();\n        }\n    }\n\n    public isConnected() {\n        if (this.ws) {\n            return this.ws.readyState == WebSocket.OPEN;\n        }\n        return false;\n    }\n\n    public addListener(callback: (route: string, data: Object) => void, target: cc.Component) {\n        this.listeners.push(new NotifyListener(target, callback));\n    }\n\n    public request(route: string, data: any, callback: (res: Object) => void, target: cc.Component) {\n        ShootFishNetworkClient.reqId++;\n        if (ShootFishNetworkClient.reqId > 64999) {\n            ShootFishNetworkClient.reqId = 1;\n        }\n        this.requests[ShootFishNetworkClient.reqId] = new RequestListener(target, callback);\n        // console.log({ data: typeof data != \"object\" || data == null || !data ? {} : data, msgId: ShootFishNetworkClient.reqId, route: route });\n        this.send({ data: typeof data != \"object\" || data == null || !data ? {} : data, msgId: ShootFishNetworkClient.reqId, route: route });\n    }\n\n    public notify(route: string, data: any) {\n        // console.log(JSON.stringify({ data: typeof data != \"object\" || data == null || !data ? {} : data, msgId: 0, route: route }));\n        this.send({ data: typeof data != \"object\" || data == null || !data ? {} : data, msgId: 0, route: route });\n    }\n\n    public ping(callback: () => void = null, target: cc.Component = null) {\n        let t = Date.now();\n        this.request(\"ping\", null, (res) => {\n            // console.log(res);\n            ShootFishNetworkClient.PING = Date.now() - t;\n            if (ShootFishNetworkClient.MIN_PING < 0 || ShootFishNetworkClient.PING < ShootFishNetworkClient.MIN_PING) {\n                ShootFishNetworkClient.MIN_PING = ShootFishNetworkClient.PING;\n                ShootFishNetworkClient.TIME_DISTANCE = Date.now() - res[\"time\"];\n            }\n            if (callback != null) callback();\n        }, target != null ? target : ShootFishNetworkClient.NODE_FIXED);\n    }\n}\n"]}