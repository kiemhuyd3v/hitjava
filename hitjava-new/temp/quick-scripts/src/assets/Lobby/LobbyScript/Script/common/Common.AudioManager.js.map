{"version":3,"sources":["assets\\Lobby\\LobbyScript\\Script\\common\\Common.AudioManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import BroadcastReceiver from \"./BroadcastReceiver\";\nimport SPUtils from \"./SPUtils\";\nimport Utils from \"./Utils\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class AudioManager extends cc.Component {\n\n    private static instance: AudioManager = null;\n    public static getInstance(): AudioManager {\n        if (this.instance == null) {\n            let node = new cc.Node(\"AudioManager\");\n            this.instance = node.addComponent(AudioManager);\n            this.instance.audioSource = node.addComponent(cc.AudioSource);\n            cc.game.addPersistRootNode(node);\n        }\n        return this.instance;\n    }\n\n    private audioSource: cc.AudioSource = null;\n    private isOnMusic = true;\n    private isOnSound = true;\n\n    start() {\n        BroadcastReceiver.register(BroadcastReceiver.ON_AUDIO_CHANGED, () => {\n            this.isOnMusic = SPUtils.getMusicVolumn() > 0;\n            this.isOnSound = SPUtils.getSoundVolumn() > 0;\n\n            this.audioSource.mute = !this.isOnMusic;\n            if (!this.isOnSound) {\n                cc.audioEngine.stopAllEffects();\n            }\n        }, this);\n        this.isOnMusic = SPUtils.getMusicVolumn() > 0;\n        this.isOnSound = SPUtils.getSoundVolumn() > 0;\n        this.audioSource.mute = !this.isOnMusic;\n    }\n\n    public playEffect(audioClip: cc.AudioClip, volumn: number = 1) {\n        if (audioClip == null) {\n         //   cc.warn(\"AudioManager playEffect audioClip is null\");\n            return;\n        }\n        if (this.isOnSound && volumn > 0) cc.audioEngine.play(audioClip, false, volumn);\n    }\n\n    public playBackgroundMusic(audioClip: cc.AudioClip, loop: boolean = true, volumn: number = 1) {\n        if (audioClip == null) {\n         //   cc.warn(\"AudioManager playBackgroundMusic audioClip is null\");\n             //Utils.Log(\"AudioManager playBackgroundMusic audioClip is null\");\n            return;\n        }\n        this.audioSource.stop();\n        this.audioSource.clip = audioClip;\n        this.audioSource.volume = volumn;\n        this.audioSource.mute = !this.isOnMusic;\n        this.audioSource.loop = loop;\n        this.audioSource.play();\n    }\n}\n"]}