{"version":3,"sources":["assets\\Lobby\\LobbyScript\\Script\\networks\\CardGame.Cmd.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import OutPacket from \"./Network.OutPacket\";\nimport InPacket from \"./Network.InPacket\";\n\nconst { ccclass } = cc._decorator;\n\nexport namespace CardGameCmd {\n    export class Code {\n        static LOGIN = 1;\n        static NOTIFY_DISCONNECT = 37;\n        static PING_PONG = 50;\n        static JOIN_ROOM = 3001;\n        static RECONNECT_GAME_ROOM = 3002;\n        static JOIN_ROOM_FAIL = 3004;\n        static HOLD = 3116;\n        static MONEY_BET_CONFIG = 3003;\n        static GET_LIST_ROOM = 3014;\n        static TOP_SERVER = 1001;\n        static CHEAT_CARD = 3115;\n        static PING_TEST = 1050;\n        static CHAT_ROOM = 3008;\n        static NO_HU_VANG = 3007;\n        static THONG_TIN_HU_VANG = 3009;\n        static REQUEST_INFO_MOI_CHOI = 3010;\n        static MOI_CHOI = 3011;\n        static ACCEPT_MOI_CHOI = 3012;\n        static CREATE_ROOM = 3013;\n        static JOIN_GAME_ROOM_BY_ID = 3015;\n        static FIND_ROOM_LOBBY = 3016;\n        static GET_XOCDIA_CONFIG = 3017;\n        static CREATE_ROOM_FAIL = 3018;\n    }\n\n    export class SendMoneyBetConfig extends OutPacket {\n        constructor() {\n            super();\n            this.initData(100);\n            this.setControllerId(1);\n            this.setCmdId(Code.MONEY_BET_CONFIG);\n            this.packHeader();\n            this.updateSize();\n        }\n    }\n\n    export class ResMoneyBetConfig extends InPacket {\n        list = [];\n        rules = [];\n        constructor(data: Uint8Array) {\n            super(data);\n            let listSize = this.getShort();\n            for (var a = 0; a < listSize; a++) {\n                var b = {\n                    maxUserPerRoom: this.getInt(),\n                    moneyType: this.getByte(),\n                    moneyBet: this.getLong(),\n                    moneyRequire: this.getLong(),\n                    nPersion: this.getInt(),\n                };\n                this.list.push(b);\n            }\n            for (a = 0; a < listSize; a++) this.rules.push(this.getByte());\n        }\n    }\n\n    export class SendGetListRoom extends OutPacket {\n        constructor(moneyType: number, maxPlayer: number, param3: number, param4: number, cardFrom: number, cardTo: number) {\n            super();\n            this.initData(100);\n            this.setControllerId(1);\n            this.setCmdId(Code.GET_LIST_ROOM);\n            this.packHeader();\n            this.putByte(moneyType);\n            this.putByte(maxPlayer);\n            this.putByte(param3);\n            this.putByte(param4);\n            this.putByte(cardFrom);\n            this.putByte(cardTo);\n            this.updateSize();\n        }\n    }\n\n    export class SendJoinRoom extends OutPacket {\n        constructor(type: number, max: number, bet: number, rule: number) {\n            super();\n            this.initData(100);\n            this.setControllerId(1);\n            this.setCmdId(Code.JOIN_ROOM);\n            this.packHeader();\n            this.putInt(type);\n            this.putInt(max);\n            this.putLong(bet);\n            this.putInt(rule);\n            this.updateSize();\n        }\n    }\n\n    export class SendJoinRoomById extends OutPacket {\n        constructor(id: number) {\n            super();\n            this.initData(100);\n            this.setControllerId(1);\n            this.setCmdId(Code.JOIN_GAME_ROOM_BY_ID);\n            this.packHeader();\n            this.putInt(id);\n            this.putString(\"\");//mat khau\n            this.updateSize();\n        }\n    }\n\n    export class ReceivedJoinRoomFail extends InPacket {\n        error = 0;\n\n        constructor(data: Uint8Array) {\n            super(data);\n            this.error = this.getError();\n        }\n    }\n}\nexport default CardGameCmd;"]}