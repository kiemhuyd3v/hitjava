{"version":3,"sources":["assets\\Poker\\PokerScript\\Poker.ItemRoom.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qEAAgE;AAChE,uDAAiD;AAE3C,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA2C,iCAAY;IAAvD;QAAA,qEAmCC;QAhCG,cAAQ,GAAa,IAAI,CAAC;QAE1B,iBAAW,GAAa,IAAI,CAAC;QAE7B,qBAAe,GAAa,IAAI,CAAC;QAEjC,wBAAkB,GAAc,IAAI,CAAC;QAE7B,cAAQ,GAAG,IAAI,CAAC;;QAuBxB,iBAAiB;IACrB,CAAC;IAtBG,wBAAwB;IAExB,eAAe;IAEf,6BAAK,GAAL;IAEA,CAAC;IAED,gCAAQ,GAAR,UAAS,IAAI;QACT,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,eAAK,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,eAAK,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC/E,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACnF,CAAC;IAED,kCAAU,GAAV;QACI,0BAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrD,CAAC;IA7BD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;mDACO;IAE1B;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;sDACU;IAE7B;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;0DACc;IAEjC;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;6DACiB;IATpB,aAAa;QADjC,OAAO;OACa,aAAa,CAmCjC;IAAD,oBAAC;CAnCD,AAmCC,CAnC0C,EAAE,CAAC,SAAS,GAmCtD;kBAnCoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["import Utils from \"../../Lobby/LobbyScript/Script/common/Utils\";\nimport PokerController from \"./Poker.Controller\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PokerItemRoom extends cc.Component {\n\n    @property(cc.Label)\n    labelBet: cc.Label = null;\n    @property(cc.Label)\n    labelBetMin: cc.Label = null;\n    @property(cc.Label)\n    labelNumPlayers: cc.Label = null;\n    @property(cc.Sprite)\n    progressNumPlayers: cc.Sprite = null;\n\n    private roomInfo = null;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n\n    start() {\n\n    }\n\n    initItem(info) {\n        this.roomInfo = info;\n\n        this.labelBet.string = Utils.formatNumber(info[\"moneyBet\"]);\n        this.labelBetMin.string = Utils.formatNumber(info[\"requiredMoney\"]);\n        this.labelNumPlayers.string = info[\"userCount\"] + \"/\" + info[\"maxUserPerRoom\"];\n        this.progressNumPlayers.fillRange = info[\"userCount\"] / info[\"maxUserPerRoom\"];\n    }\n\n    chooseRoom() {\n        PokerController.instance.joinRoom(this.roomInfo);\n    }\n\n    // update (dt) {}\n}\n"]}